[["index.html", "Intro RNA-seq LCG-UNAM 2021 Overview 0.1 Workflows 0.2 SummarizedExperiment 0.3 Para encontrar paquetes 0.4 Dos versiones de Bioconductor (Release y Devel) 0.5 Actulaizaciones de R y Bioconductor", " Intro RNA-seq LCG-UNAM 2021 Leonardo Collado-Torres, Alfredo Varela Vega 2021-02-27 Overview Los temas generales que se abordan son: Introducción a Github utilizando RStudio Introducción a bioconductor Objetos de Bioconductor para datos de expresión recount3 Modelos estadísticos Conclusión library(&quot;sessioninfo&quot;) library(&quot;here&quot;) ## here() starts at /Users/avarela/rnaseq_2021_notas library(&quot;ggplot2&quot;) ## Hello world print(&quot;Soy Alfredo&quot;) ## [1] &quot;Soy Alfredo&quot; # Crear directorio para las figuras dir.create(here::here(&quot;figuras&quot;), showWarnings = FALSE) # Haver una imagen de ejemplo pdf(here::here(&quot;figuras&quot;,&quot;mtcars_gear_vs_mpg.pdf&quot;), useDingbats= FALSE) ggplot(mtcars, aes(x = gear, y =mpg))+ geom_point() dev.off() ## quartz_off_screen ## 2 # Para reproducir mi codigo options(width=120) sessioninfo::session_info() ## ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── ## setting value ## version R version 4.0.3 (2020-10-10) ## os macOS Big Sur 10.16 ## system x86_64, darwin17.0 ## ui RStudio ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz America/Mexico_City ## date 2021-02-27 ## ## ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── ## package * version date lib source ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.0.2) ## bookdown 0.21 2020-10-13 [1] CRAN (R 4.0.2) ## bslib 0.2.4 2021-01-25 [1] CRAN (R 4.0.2) ## cli 2.3.0 2021-01-31 [1] CRAN (R 4.0.2) ## colorspace 2.0-0 2020-11-11 [1] CRAN (R 4.0.2) ## crayon 1.4.1 2021-02-08 [1] CRAN (R 4.0.2) ## DBI 1.1.1 2021-01-15 [1] CRAN (R 4.0.2) ## digest 0.6.27 2020-10-24 [1] CRAN (R 4.0.2) ## dplyr 1.0.4 2021-02-02 [1] CRAN (R 4.0.2) ## ellipsis 0.3.1 2020-05-15 [1] CRAN (R 4.0.2) ## evaluate 0.14 2019-05-28 [1] CRAN (R 4.0.1) ## fansi 0.4.2 2021-01-15 [1] CRAN (R 4.0.2) ## farver 2.0.3 2020-01-16 [1] CRAN (R 4.0.2) ## generics 0.1.0 2020-10-31 [1] CRAN (R 4.0.2) ## ggplot2 * 3.3.3 2020-12-30 [1] CRAN (R 4.0.2) ## glue 1.4.2 2020-08-27 [1] CRAN (R 4.0.2) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 4.0.2) ## here * 1.0.1 2020-12-13 [1] CRAN (R 4.0.2) ## htmltools 0.5.1.1 2021-01-22 [1] CRAN (R 4.0.2) ## jquerylib 0.1.3 2020-12-17 [1] CRAN (R 4.0.2) ## jsonlite 1.7.2 2020-12-09 [1] CRAN (R 4.0.3) ## knitr 1.31 2021-01-27 [1] CRAN (R 4.0.2) ## labeling 0.4.2 2020-10-20 [1] CRAN (R 4.0.2) ## lifecycle 1.0.0 2021-02-15 [1] CRAN (R 4.0.2) ## magrittr 2.0.1 2020-11-17 [1] CRAN (R 4.0.2) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 4.0.2) ## pillar 1.5.0 2021-02-22 [1] CRAN (R 4.0.3) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.0.2) ## purrr 0.3.4 2020-04-17 [1] CRAN (R 4.0.2) ## R6 2.5.0 2020-10-28 [1] CRAN (R 4.0.2) ## rlang 0.4.10 2020-12-30 [1] CRAN (R 4.0.2) ## rmarkdown 2.7 2021-02-19 [1] CRAN (R 4.0.3) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.0.2) ## rstudioapi 0.13 2020-11-12 [1] CRAN (R 4.0.2) ## sass 0.3.1 2021-01-24 [1] CRAN (R 4.0.2) ## scales 1.1.1 2020-05-11 [1] CRAN (R 4.0.2) ## sessioninfo * 1.1.1 2018-11-05 [1] CRAN (R 4.0.2) ## stringi 1.5.3 2020-09-09 [1] CRAN (R 4.0.2) ## stringr 1.4.0 2019-02-10 [1] CRAN (R 4.0.2) ## tibble 3.0.6 2021-01-29 [1] CRAN (R 4.0.2) ## tidyselect 1.1.0 2020-05-11 [1] CRAN (R 4.0.2) ## utf8 1.1.4 2018-05-24 [1] CRAN (R 4.0.2) ## vctrs 0.3.6 2020-12-17 [1] CRAN (R 4.0.2) ## withr 2.4.1 2021-01-26 [1] CRAN (R 4.0.2) ## xfun 0.21 2021-02-10 [1] CRAN (R 4.0.2) ## yaml 2.2.1 2020-02-01 [1] CRAN (R 4.0.2) ## ## [1] /Library/Frameworks/R.framework/Versions/4.0/Resources/library # Bioconductor - Repositorio de paquetes de R para análisis biológico - Versión 3.12 la más reciente ## 4tipos de paquetes 0.0.1 Software 0.0.2 Anotación 0.0.3 Experiment Data Cuando quieres compartir datos Datos exhaustivos 0.1 Workflows Describe como puedes usar varios paquetes de Bioconductor para análisis 0.2 SummarizedExperiment objeto de R que nos ayuda a agrupar información necesaria en análisis de expresión diferencial 0.3 Para encontrar paquetes Checar la docuemtnación Que contesten a los usuarios 0.4 Dos versiones de Bioconductor (Release y Devel) 0.5 Actulaizaciones de R y Bioconductor En abril y octurbe se actualiza bioconductor y R se actualiza 1 vez al año "],["paquetes-en-equipo.html", "1 Paquetes en Equipo", " 1 Paquetes en Equipo BUENA {https://bioconductor.org/packages/3.12/bioc/html/VariantAnnotation.html} Este paquete es antiguo pero es una gran contribución a la comunidad, tanto que muchos otros paquetes son dependientes de este, volviéndolo una inclusión básica y necesaria para el desarrollo de investigaciones en R. Un gran punto sobre este proyecto es que contiene videos explicativos, como un tutorial para aprender las funciones básicas del paquete. Un punto a mejorar sería corregir los warnings en Windows y actualizarlo para versiones más actuales del mismo. MALA {https://bioconductor.org/packages/release/data/experiment/manuals/RRBSdata/man/RRBSdata.pdf} La documentación es incompleta, carece de compatibilidad con plataformas que no sean ubuntu y no existe el github por lo tanto dificulta el contacto con los desarrolladores. BUENA {https://bioconductor.org/packages/release/bioc/html/DECIPHER.html} La documentación de este paquete es muy abundante y clara, explica cada uno de sus módulos y tiene una presentación impecable. Además, es un paquete muy versátil que permite su uso en diversas áreas de investigación. También debemos destacar que tiene importancia para otros paquetes, pues estos dependen o se basan en él. MALA {https://bioconductor.org/packages/release/bioc/html/sangeranalyseR.html} A pesar de ser un paquete reciente, el autor no lo ha actualizado desde la primera versión. Tiene compatibilidad nula con diversas distribuciones de software, pues muestra warnings en check. Por su alta dependencia a otros paquetes parecería que es una colección de los mismos. La documentación mostrada es muy poca, y los comentarios en el código fuente son inexistentes. BUENA {http://bioconductor.org/packages/3.12/bioc/html/IsoformSwitchAnalyzeR.html} Este paquete ha demostrado ser muy útil para varias herramientas de análisis, incluso contiene trabajos que lo citan en su página de bioconductor. Sí tiene GitHub para una comunicación con el desarrollador. Y se ha demostrado un uso constante del paquete, ya que contiene varios issues. También podemos encontrar que la mayoría de estos son sugerencias para eficientizar el código y no errores. Es un paquete accesible para citar y comunicarse con los desarrolladores. MALA {http://bioconductor.org/packages/release/bioc/html/riboSeqR.html} No tiene soporte a pesar de ser antiguo, se nota que no ha sido actualizado. No es un paquete muy robusto en funcionalidad ni documentación. Es probable que ya no se le dé soporte actual. "],["objetos.html", "2 Objetos 2.1 RNA-seq workflow: gene-level exploratory analysis and differential expression 2.2 Summarized Experiment (tipo de objeto) 2.3 Genomic Ranges (tipo de objeto) 2.4 Ejercicio", " 2 Objetos 2.1 RNA-seq workflow: gene-level exploratory analysis and differential expression 2.2 Summarized Experiment (tipo de objeto) Construido con programación orientada a objetos Core rowRanges Tabla de info de los genes 1 rengón por cada gen columnas son info de los genes assay (counts) 1 renglon por gen 1 columna por muestra colData 1 renglón por cada muestra 1 columna por cada variable de info para las muestras 2.3 Genomic Ranges (tipo de objeto) Diseñada para almacenar de forma eficiente información sobre los genes - renglones el gen - columnas región del genoma, contenido de GC score - Lee formato BED - Lee formatos GTF Si alguno se le hace más fácil seguir el código en su Rstudio, pueden irse a la terminal (que está a lado de la consola ) y darle wget https://raw.githubusercontent.com/lcolladotor/rnaseq_LCG-UNAM_2021/master/03_SummarizedExperiment.Rmd para que les ponga ahí solo ese código y lo puedan cargar library(SummarizedExperiment) ## Loading required package: MatrixGenerics ## Loading required package: matrixStats ## ## Attaching package: &#39;MatrixGenerics&#39; ## The following objects are masked from &#39;package:matrixStats&#39;: ## ## colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, ## colCumprods, colCumsums, colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, colMads, colMaxs, ## colMeans2, colMedians, colMins, colOrderStats, colProds, colQuantiles, colRanges, colRanks, colSdDiffs, ## colSds, colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, colWeightedMeans, ## colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, ## rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, ## rowIQRs, rowLogSumExps, rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, rowOrderStats, ## rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, ## rowVars, rowWeightedMads, rowWeightedMeans, rowWeightedMedians, rowWeightedSds, rowWeightedVars ## Loading required package: GenomicRanges ## Loading required package: stats4 ## Loading required package: BiocGenerics ## Loading required package: parallel ## ## Attaching package: &#39;BiocGenerics&#39; ## The following objects are masked from &#39;package:parallel&#39;: ## ## clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, ## parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB ## The following objects are masked from &#39;package:stats&#39;: ## ## IQR, mad, sd, var, xtabs ## The following objects are masked from &#39;package:base&#39;: ## ## anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, ## evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, order, ## paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, ## table, tapply, union, unique, unsplit, which.max, which.min ## Loading required package: S4Vectors ## ## Attaching package: &#39;S4Vectors&#39; ## The following object is masked from &#39;package:base&#39;: ## ## expand.grid ## Loading required package: IRanges ## Loading required package: GenomeInfoDb ## Loading required package: Biobase ## Welcome to Bioconductor ## ## Vignettes contain introductory material; view with &#39;browseVignettes()&#39;. To cite Bioconductor, see ## &#39;citation(&quot;Biobase&quot;)&#39;, and for packages &#39;citation(&quot;pkgname&quot;)&#39;. ## ## Attaching package: &#39;Biobase&#39; ## The following object is masked from &#39;package:MatrixGenerics&#39;: ## ## rowMedians ## The following objects are masked from &#39;package:matrixStats&#39;: ## ## anyMissing, rowMedians ## ?SummarizedExperiment ## De los ejemplos en la ayuda oficial ## Creamos los datos para nuestro objeto de tipo SummarizedExperiment ## para 200 genes a lo largo de 6 muestras nrows &lt;- 200 ncols &lt;- 6 ## Números al azar de cuentas set.seed(20210223) counts &lt;- matrix(runif(nrows * ncols, 1, 1e4), nrows) ## Información de nuestros genes rowRanges &lt;- GRanges( rep(c(&quot;chr1&quot;, &quot;chr2&quot;), c(50, 150)), IRanges(floor(runif(200, 1e5, 1e6)), width = 100), strand = sample(c(&quot;+&quot;, &quot;-&quot;), 200, TRUE), feature_id = sprintf(&quot;ID%03d&quot;, 1:200) ) names(rowRanges) &lt;- paste0(&quot;gene_&quot;, seq_len(length(rowRanges))) ## Información de nuestras muestras colData &lt;- DataFrame( Treatment = rep(c(&quot;ChIP&quot;, &quot;Input&quot;), 3), row.names = LETTERS[1:6] ) ## Juntamos ahora toda la información en un solo objeto de R rse &lt;- SummarizedExperiment( assays = SimpleList(counts = counts), rowRanges = rowRanges, colData = colData ) ## Exploremos el objeto resultante rse ## class: RangedSummarizedExperiment ## dim: 200 6 ## metadata(0): ## assays(1): counts ## rownames(200): gene_1 gene_2 ... gene_199 gene_200 ## rowData names(1): feature_id ## colnames(6): A B ... E F ## colData names(1): Treatment ## Número de genes y muestras # 200 genes a lo largo de 6 muestras dim(rse) ## [1] 200 6 ## IDs de nuestros genes y muestras # gene_1, gene_2 dimnames(rse) ## [[1]] ## [1] &quot;gene_1&quot; &quot;gene_2&quot; &quot;gene_3&quot; &quot;gene_4&quot; &quot;gene_5&quot; &quot;gene_6&quot; &quot;gene_7&quot; &quot;gene_8&quot; &quot;gene_9&quot; &quot;gene_10&quot; ## [11] &quot;gene_11&quot; &quot;gene_12&quot; &quot;gene_13&quot; &quot;gene_14&quot; &quot;gene_15&quot; &quot;gene_16&quot; &quot;gene_17&quot; &quot;gene_18&quot; &quot;gene_19&quot; &quot;gene_20&quot; ## [21] &quot;gene_21&quot; &quot;gene_22&quot; &quot;gene_23&quot; &quot;gene_24&quot; &quot;gene_25&quot; &quot;gene_26&quot; &quot;gene_27&quot; &quot;gene_28&quot; &quot;gene_29&quot; &quot;gene_30&quot; ## [31] &quot;gene_31&quot; &quot;gene_32&quot; &quot;gene_33&quot; &quot;gene_34&quot; &quot;gene_35&quot; &quot;gene_36&quot; &quot;gene_37&quot; &quot;gene_38&quot; &quot;gene_39&quot; &quot;gene_40&quot; ## [41] &quot;gene_41&quot; &quot;gene_42&quot; &quot;gene_43&quot; &quot;gene_44&quot; &quot;gene_45&quot; &quot;gene_46&quot; &quot;gene_47&quot; &quot;gene_48&quot; &quot;gene_49&quot; &quot;gene_50&quot; ## [51] &quot;gene_51&quot; &quot;gene_52&quot; &quot;gene_53&quot; &quot;gene_54&quot; &quot;gene_55&quot; &quot;gene_56&quot; &quot;gene_57&quot; &quot;gene_58&quot; &quot;gene_59&quot; &quot;gene_60&quot; ## [61] &quot;gene_61&quot; &quot;gene_62&quot; &quot;gene_63&quot; &quot;gene_64&quot; &quot;gene_65&quot; &quot;gene_66&quot; &quot;gene_67&quot; &quot;gene_68&quot; &quot;gene_69&quot; &quot;gene_70&quot; ## [71] &quot;gene_71&quot; &quot;gene_72&quot; &quot;gene_73&quot; &quot;gene_74&quot; &quot;gene_75&quot; &quot;gene_76&quot; &quot;gene_77&quot; &quot;gene_78&quot; &quot;gene_79&quot; &quot;gene_80&quot; ## [81] &quot;gene_81&quot; &quot;gene_82&quot; &quot;gene_83&quot; &quot;gene_84&quot; &quot;gene_85&quot; &quot;gene_86&quot; &quot;gene_87&quot; &quot;gene_88&quot; &quot;gene_89&quot; &quot;gene_90&quot; ## [91] &quot;gene_91&quot; &quot;gene_92&quot; &quot;gene_93&quot; &quot;gene_94&quot; &quot;gene_95&quot; &quot;gene_96&quot; &quot;gene_97&quot; &quot;gene_98&quot; &quot;gene_99&quot; &quot;gene_100&quot; ## [101] &quot;gene_101&quot; &quot;gene_102&quot; &quot;gene_103&quot; &quot;gene_104&quot; &quot;gene_105&quot; &quot;gene_106&quot; &quot;gene_107&quot; &quot;gene_108&quot; &quot;gene_109&quot; &quot;gene_110&quot; ## [111] &quot;gene_111&quot; &quot;gene_112&quot; &quot;gene_113&quot; &quot;gene_114&quot; &quot;gene_115&quot; &quot;gene_116&quot; &quot;gene_117&quot; &quot;gene_118&quot; &quot;gene_119&quot; &quot;gene_120&quot; ## [121] &quot;gene_121&quot; &quot;gene_122&quot; &quot;gene_123&quot; &quot;gene_124&quot; &quot;gene_125&quot; &quot;gene_126&quot; &quot;gene_127&quot; &quot;gene_128&quot; &quot;gene_129&quot; &quot;gene_130&quot; ## [131] &quot;gene_131&quot; &quot;gene_132&quot; &quot;gene_133&quot; &quot;gene_134&quot; &quot;gene_135&quot; &quot;gene_136&quot; &quot;gene_137&quot; &quot;gene_138&quot; &quot;gene_139&quot; &quot;gene_140&quot; ## [141] &quot;gene_141&quot; &quot;gene_142&quot; &quot;gene_143&quot; &quot;gene_144&quot; &quot;gene_145&quot; &quot;gene_146&quot; &quot;gene_147&quot; &quot;gene_148&quot; &quot;gene_149&quot; &quot;gene_150&quot; ## [151] &quot;gene_151&quot; &quot;gene_152&quot; &quot;gene_153&quot; &quot;gene_154&quot; &quot;gene_155&quot; &quot;gene_156&quot; &quot;gene_157&quot; &quot;gene_158&quot; &quot;gene_159&quot; &quot;gene_160&quot; ## [161] &quot;gene_161&quot; &quot;gene_162&quot; &quot;gene_163&quot; &quot;gene_164&quot; &quot;gene_165&quot; &quot;gene_166&quot; &quot;gene_167&quot; &quot;gene_168&quot; &quot;gene_169&quot; &quot;gene_170&quot; ## [171] &quot;gene_171&quot; &quot;gene_172&quot; &quot;gene_173&quot; &quot;gene_174&quot; &quot;gene_175&quot; &quot;gene_176&quot; &quot;gene_177&quot; &quot;gene_178&quot; &quot;gene_179&quot; &quot;gene_180&quot; ## [181] &quot;gene_181&quot; &quot;gene_182&quot; &quot;gene_183&quot; &quot;gene_184&quot; &quot;gene_185&quot; &quot;gene_186&quot; &quot;gene_187&quot; &quot;gene_188&quot; &quot;gene_189&quot; &quot;gene_190&quot; ## [191] &quot;gene_191&quot; &quot;gene_192&quot; &quot;gene_193&quot; &quot;gene_194&quot; &quot;gene_195&quot; &quot;gene_196&quot; &quot;gene_197&quot; &quot;gene_198&quot; &quot;gene_199&quot; &quot;gene_200&quot; ## ## [[2]] ## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; ## Nombres de tablas de cuentas que tenemos (RPKM, CPM, counts, logcounts, etc) assayNames(rse) ## [1] &quot;counts&quot; ## El inicio de nuestra tabla de cuentas head(assay(rse)) ## A B C D E F ## gene_1 2577.960 8526.615 2226.3070 3615.8967 1723.8851 3267.954 ## gene_2 7793.183 3462.579 478.2716 7688.3839 295.2813 2698.921 ## gene_3 9571.769 5280.564 9772.1671 9916.0076 2621.2085 6880.067 ## gene_4 4641.969 2784.091 6670.6757 258.5218 2771.8970 8737.586 ## gene_5 6436.758 7053.276 9978.8199 3588.1194 1447.9821 7290.890 ## gene_6 6845.704 1502.045 4383.5686 9750.8286 3529.3153 2192.060 ## Información de los genes en un objeto de Bioconductor rowRanges(rse) ## GRanges object with 200 ranges and 1 metadata column: ## seqnames ranges strand | feature_id ## &lt;Rle&gt; &lt;IRanges&gt; &lt;Rle&gt; | &lt;character&gt; ## gene_1 chr1 286235-286334 + | ID001 ## gene_2 chr1 586770-586869 - | ID002 ## gene_3 chr1 577897-577996 + | ID003 ## gene_4 chr1 494350-494449 + | ID004 ## gene_5 chr1 686692-686791 - | ID005 ## ... ... ... ... . ... ## gene_196 chr2 804998-805097 - | ID196 ## gene_197 chr2 177462-177561 - | ID197 ## gene_198 chr2 649993-650092 - | ID198 ## gene_199 chr2 275940-276039 - | ID199 ## gene_200 chr2 487418-487517 + | ID200 ## ------- ## seqinfo: 2 sequences from an unspecified genome; no seqlengths ## Tabla con información de los genes rowData(rse) # es idéntico a &#39;mcols(rowRanges(rse))&#39; ## DataFrame with 200 rows and 1 column ## feature_id ## &lt;character&gt; ## gene_1 ID001 ## gene_2 ID002 ## gene_3 ID003 ## gene_4 ID004 ## gene_5 ID005 ## ... ... ## gene_196 ID196 ## gene_197 ID197 ## gene_198 ID198 ## gene_199 ID199 ## gene_200 ID200 ## Tabla con información de las muestras colData(rse) ## DataFrame with 6 rows and 1 column ## Treatment ## &lt;character&gt; ## A ChIP ## B Input ## C ChIP ## D Input ## E ChIP ## F Input # Es como hacer el unique de los seq names # te da el nombre de todos los cromosomas seqlevels(rse) ## [1] &quot;chr1&quot; &quot;chr2&quot; # el número de todos los cromosomas length(seqlevels(rse)) ## [1] 2 # vector comprimido para hacerlo más eficiente unique(as.vector(seqnames(rowRanges(rse)))) ## [1] &quot;chr1&quot; &quot;chr2&quot; ## ver el tamaño en gigas del objeto # pryr::object_size(sce) Counts son lecturas que sobrelapan ese gen 2.4 Ejercicio ¿Qué es lo que pasa en esos dos comandos? ## ----rse_exercise------------------------------------------------------------------------------------------------------------- ## Comando 1 # Se toman los genes 1 y 2 en todas las muestras # Se asegura de que haga el subconjunto adecuado en todas las tablas rse[1:2, ] ## class: RangedSummarizedExperiment ## dim: 2 6 ## metadata(0): ## assays(1): counts ## rownames(2): gene_1 gene_2 ## rowData names(1): feature_id ## colnames(6): A B ... E F ## colData names(1): Treatment ## Comando 2 # Se accede a las muestras A,D,F de todos los genes # Es posible debido a que en el objeto rse tenemos nombres de todas las muestras rse[, c(&quot;A&quot;, &quot;D&quot;, &quot;F&quot;)] ## class: RangedSummarizedExperiment ## dim: 200 3 ## metadata(0): ## assays(1): counts ## rownames(200): gene_1 gene_2 ... gene_199 gene_200 ## rowData names(1): feature_id ## colnames(3): A D F ## colData names(1): Treatment which(colnames(rse)%in%c(&quot;A&quot;,&quot;D&quot;,&quot;F&quot;)) ## [1] 1 4 6 # Salen todos los valores de la columna treatment que está definido en la tabla de colData rse$Treatment ## [1] &quot;ChIP&quot; &quot;Input&quot; &quot;ChIP&quot; &quot;Input&quot; &quot;ChIP&quot; &quot;Input&quot; args(assay) ## function (x, i, withDimnames = TRUE, ...) ## NULL assay(rse) ## A B C D E F ## gene_1 2577.96033 8526.61532 2226.30696 3615.89672 1723.8851 3267.95413 ## gene_2 7793.18302 3462.57856 478.27158 7688.38386 295.2813 2698.92069 ## gene_3 9571.76874 5280.56363 9772.16709 9916.00755 2621.2085 6880.06700 ## gene_4 4641.96887 2784.09127 6670.67570 258.52177 2771.8970 8737.58578 ## gene_5 6436.75754 7053.27565 9978.81990 3588.11937 1447.9821 7290.89039 ## gene_6 6845.70440 1502.04450 4383.56861 9750.82865 3529.3153 2192.06026 ## gene_7 3287.82080 4260.31219 9947.74406 4150.82618 6641.3646 1993.60279 ## gene_8 6937.92339 5133.36095 9078.94306 5865.39691 8014.2480 1762.13649 ## gene_9 274.04360 2264.38468 3519.79659 8394.98431 517.1598 8625.78552 ## gene_10 187.53542 1853.12622 298.24308 5471.55269 193.0800 7345.74332 ## gene_11 9140.22443 8264.23132 1113.21259 1649.37263 368.7489 9584.62635 ## gene_12 7640.76926 9524.73221 5949.14803 5963.10201 4399.8529 3206.97460 ## gene_13 4204.59340 7959.08291 8931.72322 6400.03011 1867.2366 6249.86942 ## gene_14 9107.61651 1347.58895 668.25108 5720.74802 1699.4573 2956.92636 ## gene_15 2949.93324 245.81551 787.71460 2716.80041 2951.2405 7690.29636 ## gene_16 1857.45838 6752.87296 3252.55916 1117.61275 9426.4263 755.24760 ## gene_17 9689.58736 5396.00340 4286.03577 1365.19966 2277.9772 2526.13774 ## gene_18 5744.57360 5392.51947 8374.10987 3940.60322 314.4337 7362.81952 ## gene_19 8257.59233 9728.54143 2776.51275 9655.92316 7139.7173 5144.65047 ## gene_20 4789.01744 4965.63023 8579.75432 5623.71607 2393.7998 821.37828 ## gene_21 264.58660 7048.48266 213.58870 1073.04995 871.3981 1961.80667 ## gene_22 4264.65958 7511.18545 7533.60532 5626.61616 4325.0065 5055.26963 ## gene_23 8267.92539 4558.67130 5351.94181 4440.99974 6283.2971 1968.44445 ## gene_24 4748.88610 6321.74195 268.16334 3905.33107 3246.6022 756.08222 ## gene_25 750.92300 7625.15434 4844.77948 7940.09554 5664.0376 7965.96762 ## gene_26 9833.67014 8641.40718 6943.24903 3979.33541 2681.9859 2377.90899 ## gene_27 8846.79612 4883.49683 331.55348 7751.48615 2204.3282 901.86260 ## gene_28 8127.30962 159.99405 7005.47215 4869.86893 9926.5615 2260.87408 ## gene_29 838.92134 7947.50249 9940.85307 9248.82146 4344.3312 5500.71862 ## gene_30 4063.08187 3823.09819 9307.69441 2234.06390 7953.7884 473.24284 ## gene_31 6395.14801 4229.40994 925.19732 5941.57904 5745.0848 4183.56484 ## gene_32 3495.15112 3494.89712 2036.25613 54.94248 9082.7123 1941.14842 ## gene_33 9804.30679 6137.64075 9126.95157 2260.33016 8004.0615 2929.70572 ## gene_34 1630.82981 4628.96295 8004.74485 23.16218 4787.8649 1816.66428 ## gene_35 9456.68286 3539.35022 191.76503 2579.32019 6603.1474 6149.99619 ## gene_36 2228.02799 659.46742 1340.84638 4385.58458 9179.2748 1739.11095 ## gene_37 5351.48646 9766.78535 2849.99653 5881.90895 6852.2423 8880.90910 ## gene_38 7488.43873 2099.80600 8332.89031 6384.03171 5998.7025 4654.48579 ## gene_39 7383.69358 285.43115 5148.59660 9726.39349 6579.3603 938.22845 ## gene_40 5956.79069 1726.86601 7456.62026 7053.79566 6595.1623 7279.95887 ## gene_41 1833.76318 4350.86691 6824.39400 2368.52442 4854.8657 9199.85012 ## gene_42 244.81673 1059.94733 7509.60110 313.22742 5150.7289 9019.28145 ## gene_43 8277.00138 1365.12110 5224.09183 4213.51631 4393.8157 2542.10767 ## gene_44 1104.23142 8565.83091 7138.10396 2273.99021 590.0170 6207.82896 ## gene_45 7110.61511 1020.15318 1177.35657 9082.44082 3491.3964 6519.53382 ## gene_46 5522.19764 6793.36239 1464.67259 3107.59068 3232.7059 4824.02145 ## gene_47 2691.50983 4148.65106 7643.42329 9393.15223 1066.8501 8082.30664 ## gene_48 4887.18849 6174.88874 4143.70657 1338.54990 3361.6389 5970.40478 ## gene_49 4250.86555 3252.10462 87.26875 1492.31311 1923.1181 6182.82909 ## gene_50 6353.25471 4538.03708 5622.62856 1343.18571 8821.6241 1887.20458 ## gene_51 2762.15655 6919.10475 4330.88389 784.64993 2978.7049 7331.70748 ## gene_52 413.41075 5683.88169 1922.35902 2386.40944 7119.6518 5888.71006 ## gene_53 5125.56792 9969.67691 3415.35594 4523.09285 2850.0824 9848.61152 ## gene_54 9217.24024 4974.68670 2472.49365 5436.89827 5020.3254 5547.29418 ## gene_55 8679.57238 8368.47472 8482.86850 8566.33885 415.2385 890.98787 ## gene_56 9062.86399 1699.21410 9901.46375 3681.31901 7816.4436 8966.61817 ## gene_57 7581.66320 3416.80114 1300.83996 3842.36656 526.8045 5165.53765 ## gene_58 7469.63510 8481.58459 6595.58215 4084.24404 9761.1814 1280.98174 ## gene_59 3981.80813 9022.92187 8715.16867 315.31083 9991.6445 1989.81504 ## gene_60 2696.74289 3875.31701 4142.45446 1312.50996 4653.3847 1235.14768 ## gene_61 2764.33582 2194.52381 7921.41213 8537.42579 7433.4492 2205.15255 ## gene_62 8399.37687 6556.65233 9363.03755 8786.06693 4014.3820 5860.88752 ## gene_63 2269.33723 5441.55018 8478.23398 5990.80875 8505.5629 1025.30295 ## gene_64 3318.36378 508.45458 3312.07117 8704.96956 2148.1326 1117.16517 ## gene_65 6183.24666 6840.75723 2313.23263 3344.98422 4999.9394 6401.56385 ## gene_66 9877.68435 3930.21603 4455.18731 319.68788 9601.0126 6093.91971 ## gene_67 3961.11714 1154.38458 3776.68743 6975.53444 5132.4581 5547.40336 ## gene_68 9672.94104 7865.22560 2877.84935 7010.22815 7348.3892 349.81508 ## gene_69 7741.39354 1182.63936 7297.93199 2361.85548 1282.9598 9229.26063 ## gene_70 876.31736 7592.67919 4576.71173 223.23573 6755.6726 7753.92218 ## gene_71 1635.68153 66.34592 7151.96604 2017.12453 7824.1681 8130.81249 ## gene_72 7116.86106 5080.03996 837.84207 3461.83996 4032.7659 2281.67782 ## gene_73 5056.12519 3538.00186 3951.23677 1562.33512 7761.8031 4305.96818 ## gene_74 6352.12499 9821.86472 740.21179 636.32983 2463.3737 5219.74978 ## gene_75 2890.37496 8572.71915 4401.29196 2121.04479 6462.6205 4997.07694 ## gene_76 582.10184 9806.19844 5202.54216 6073.35248 1000.1975 5132.39768 ## gene_77 5662.60608 847.00698 472.13846 8094.21554 6461.5530 8628.00558 ## gene_78 9951.20339 3428.48903 2422.04673 5719.03163 8820.5099 4345.99564 ## gene_79 8751.13063 8083.00256 2826.29541 5620.14465 435.6146 681.68668 ## gene_80 832.39665 3021.97610 8486.24425 1465.61351 2349.1920 1669.42098 ## gene_81 2222.40555 9463.37798 7666.00872 4427.33651 6452.0056 1075.44164 ## gene_82 7903.16335 4642.22841 4874.83370 8423.31587 269.4969 831.22762 ## gene_83 8800.18898 5525.01811 7951.77284 5239.70279 7959.6653 1607.81083 ## gene_84 1853.90709 2690.48264 4689.16539 8005.52779 6698.4953 8290.45012 ## gene_85 5986.94871 5662.26101 5618.32206 3444.11701 6699.5774 3977.94171 ## gene_86 5128.66624 5622.69247 1971.56324 1253.88030 7126.1616 1859.64991 ## gene_87 4441.42025 9001.07984 6253.62218 4376.11697 1160.9034 403.97753 ## gene_88 6574.72927 6146.81770 5065.81880 9358.75593 9739.5978 9656.62645 ## gene_89 2244.21519 2478.86666 8480.53275 2792.16683 542.4989 3571.94018 ## gene_90 4143.96600 3956.68159 8239.89193 9800.24394 443.5033 2223.79688 ## gene_91 3218.01981 7396.82339 6940.62369 8424.14096 4503.7367 2539.22171 ## gene_92 6956.82543 751.33654 1843.12753 6530.76655 1668.3523 1783.61570 ## gene_93 9203.06373 6023.86592 2945.10781 1777.93467 3105.6176 54.45819 ## gene_94 450.73139 8424.44782 9907.05415 449.73130 5391.1992 7774.69081 ## gene_95 2817.49874 8237.71399 2825.82731 6512.61283 3369.8928 3545.95462 ## gene_96 8045.30273 4976.52214 8277.03544 4510.38959 3828.4367 8777.94914 ## gene_97 8214.54422 8965.16053 1470.61508 7682.92475 9623.2360 1890.48829 ## gene_98 5400.88606 8517.69021 5220.83317 321.73672 251.1668 3894.03133 ## gene_99 79.84365 5484.91986 3705.10522 8159.68100 9183.0892 2772.38077 ## gene_100 2685.89867 5952.52864 5224.00427 6870.00039 3607.2588 9687.82692 ## gene_101 6903.69027 7317.42720 8311.23400 3627.57778 4559.3358 4777.52053 ## gene_102 4478.88717 5908.82215 9160.82342 3461.88055 4527.3542 194.38298 ## gene_103 5611.75365 856.82232 1381.82740 6998.01951 4754.1773 2758.67977 ## gene_104 1904.69899 4321.19119 8615.64167 8398.16793 6208.5898 4368.91610 ## gene_105 5890.97051 5611.12986 6111.70257 5186.56046 1315.6439 9846.01316 ## gene_106 5797.81222 89.85542 5252.50862 8881.36039 168.6323 4446.44386 ## gene_107 4608.53518 1585.22288 3393.91908 1453.13877 4726.6317 5104.42933 ## gene_108 3749.12418 7372.32597 5523.21610 7408.18563 7934.4117 9686.80317 ## gene_109 3156.01337 2876.07041 8760.21553 1422.27067 9565.6915 5270.03607 ## gene_110 7255.79126 8315.12369 9582.40587 5564.01057 2714.9371 9653.27129 ## gene_111 3840.31486 3565.77254 5995.33401 7685.37058 1837.8735 8459.69308 ## gene_112 8408.92003 6335.78823 1296.01403 3358.67115 1596.4708 90.94874 ## gene_113 4163.07337 115.10929 8668.70947 2724.04556 4074.7793 5860.92960 ## gene_114 1768.59719 8793.34749 3038.37801 5893.27097 9300.4048 8929.05286 ## gene_115 2447.56227 1586.49700 690.53236 6167.78670 5907.7999 2570.16340 ## gene_116 3894.25499 9754.67268 2581.50663 8304.77640 8357.4917 3128.65448 ## gene_117 3886.31224 2438.32300 5767.01189 9601.98549 5437.6554 1051.44253 ## gene_118 4998.83682 1316.76181 4643.94913 2518.24096 6745.7193 2871.00644 ## gene_119 9150.75517 3188.01483 5117.92718 3440.49481 1217.2405 857.35688 ## gene_120 2706.82939 480.69766 7247.89327 4586.51790 1126.6740 539.94731 ## gene_121 5964.26804 3272.46846 4829.85040 5545.12363 2313.2853 7622.79575 ## gene_122 6954.59323 7830.26308 2094.21443 6627.24253 2596.7321 1986.55712 ## gene_123 5336.20324 1216.45073 3401.97553 9383.47387 8821.5695 2124.28432 ## gene_124 7433.69933 3805.98520 1527.40532 7144.74589 4033.3224 741.16231 ## gene_125 1462.98412 2905.74987 3579.37424 7988.77118 4961.2885 3370.19765 ## gene_126 6763.73791 8987.55562 5603.98118 7790.91309 3364.2548 1825.06037 ## gene_127 2805.94131 5761.84408 8767.73971 2273.67268 9821.5780 6387.84824 ## gene_128 4972.08802 8282.75302 7021.42044 5150.97487 7850.4815 6338.68683 ## gene_129 2281.28735 3848.47587 2808.18239 9870.03202 1892.9321 9882.63050 ## gene_130 4124.30354 1770.18494 3085.12488 492.97333 6543.5881 775.80133 ## gene_131 5595.89541 8229.91351 106.69284 8261.34559 5728.8644 8395.24479 ## gene_132 3707.70988 8643.88107 6720.97941 3738.60100 1991.5686 6139.25746 ## gene_133 3224.47829 277.40441 1164.16065 6514.96271 5751.0644 500.69077 ## gene_134 49.81098 5127.55317 7765.85174 7287.91459 3622.5447 9248.63872 ## gene_135 7959.78130 442.54204 1101.69547 5379.04894 3491.2792 7822.39993 ## gene_136 2095.61257 3865.31198 195.38203 141.47600 9011.7306 106.77673 ## gene_137 8010.84876 4957.48100 9937.41487 8586.28196 2465.4876 7255.61696 ## gene_138 3751.45813 4869.84278 6974.60027 2818.76967 3289.3587 8928.37100 ## gene_139 8517.88347 8873.17617 4232.18445 7825.20941 793.6533 6049.99967 ## gene_140 559.09748 7953.70202 7898.17321 7007.24977 8958.1675 1641.50865 ## gene_141 8013.90916 9344.11632 1116.50398 1915.09292 7531.7758 9182.94937 ## gene_142 9690.43546 6455.96179 1955.59296 3987.87627 1877.4703 2905.05357 ## gene_143 8845.66962 7215.55403 8622.69887 6349.35486 3149.9783 4893.56240 ## gene_144 4470.79652 5234.54336 4356.21288 5065.60584 8420.1635 7055.78045 ## gene_145 6877.58721 9198.25875 5181.50565 9611.66795 3084.4356 1929.76263 ## gene_146 1516.38675 3049.77772 8778.99134 7329.57491 5049.8384 2327.19203 ## gene_147 3968.12270 2904.44872 7871.37065 8082.89890 5059.0680 2664.45960 ## gene_148 1277.32665 1535.15559 7821.18490 9256.91630 6758.8613 350.78358 ## gene_149 675.31669 1976.98485 7335.08705 449.91547 1544.0309 3626.89294 ## gene_150 9201.76480 6448.57023 8364.44794 8644.41677 6227.0986 3460.96548 ## gene_151 3969.49029 6926.72619 2352.06886 8916.48345 3123.8134 4993.82224 ## gene_152 8301.86690 3362.16913 3165.96562 9952.26878 3965.8049 1043.15527 ## gene_153 7559.35859 6397.40470 7768.86830 8280.59858 9535.5072 9300.92471 ## gene_154 5198.18112 7006.49621 2703.00669 2926.83490 2604.5916 2647.39517 ## gene_155 660.72666 6920.98177 2675.00192 4250.78679 1114.4415 9089.87501 ## gene_156 5263.09709 1508.46782 2988.88208 4809.50866 5465.1921 8136.13040 ## gene_157 2165.39871 3807.66195 8909.70970 9640.47672 4042.1222 602.91620 ## gene_158 6704.15235 7934.72072 1000.18410 5750.35004 5807.5511 1823.63782 ## gene_159 9589.87676 9050.14094 4311.96314 4156.55483 4034.5455 4471.92048 ## gene_160 9512.35196 8956.11758 7456.57447 6248.03849 1462.2563 4464.28682 ## gene_161 4227.33762 8033.73702 7243.05458 5650.61720 1225.3349 7844.65442 ## gene_162 1122.13585 8103.39846 9342.96298 5428.62190 9050.4630 8463.86994 ## gene_163 6388.10686 6931.89483 613.25415 7272.34080 7272.1024 4864.38385 ## gene_164 6409.52239 6342.94812 8275.49664 747.32927 1537.7940 7845.21767 ## gene_165 1485.44703 2514.85639 5837.20304 3600.26256 7860.7622 8957.64439 ## gene_166 9679.54115 1097.81682 1109.90187 8021.27295 4295.0810 3503.28435 ## [ reached getOption(&quot;max.print&quot;) -- omitted 34 rows ] assay(rse, &quot;counts&quot;) ## A B C D E F ## gene_1 2577.96033 8526.61532 2226.30696 3615.89672 1723.8851 3267.95413 ## gene_2 7793.18302 3462.57856 478.27158 7688.38386 295.2813 2698.92069 ## gene_3 9571.76874 5280.56363 9772.16709 9916.00755 2621.2085 6880.06700 ## gene_4 4641.96887 2784.09127 6670.67570 258.52177 2771.8970 8737.58578 ## gene_5 6436.75754 7053.27565 9978.81990 3588.11937 1447.9821 7290.89039 ## gene_6 6845.70440 1502.04450 4383.56861 9750.82865 3529.3153 2192.06026 ## gene_7 3287.82080 4260.31219 9947.74406 4150.82618 6641.3646 1993.60279 ## gene_8 6937.92339 5133.36095 9078.94306 5865.39691 8014.2480 1762.13649 ## gene_9 274.04360 2264.38468 3519.79659 8394.98431 517.1598 8625.78552 ## gene_10 187.53542 1853.12622 298.24308 5471.55269 193.0800 7345.74332 ## gene_11 9140.22443 8264.23132 1113.21259 1649.37263 368.7489 9584.62635 ## gene_12 7640.76926 9524.73221 5949.14803 5963.10201 4399.8529 3206.97460 ## gene_13 4204.59340 7959.08291 8931.72322 6400.03011 1867.2366 6249.86942 ## gene_14 9107.61651 1347.58895 668.25108 5720.74802 1699.4573 2956.92636 ## gene_15 2949.93324 245.81551 787.71460 2716.80041 2951.2405 7690.29636 ## gene_16 1857.45838 6752.87296 3252.55916 1117.61275 9426.4263 755.24760 ## gene_17 9689.58736 5396.00340 4286.03577 1365.19966 2277.9772 2526.13774 ## gene_18 5744.57360 5392.51947 8374.10987 3940.60322 314.4337 7362.81952 ## gene_19 8257.59233 9728.54143 2776.51275 9655.92316 7139.7173 5144.65047 ## gene_20 4789.01744 4965.63023 8579.75432 5623.71607 2393.7998 821.37828 ## gene_21 264.58660 7048.48266 213.58870 1073.04995 871.3981 1961.80667 ## gene_22 4264.65958 7511.18545 7533.60532 5626.61616 4325.0065 5055.26963 ## gene_23 8267.92539 4558.67130 5351.94181 4440.99974 6283.2971 1968.44445 ## gene_24 4748.88610 6321.74195 268.16334 3905.33107 3246.6022 756.08222 ## gene_25 750.92300 7625.15434 4844.77948 7940.09554 5664.0376 7965.96762 ## gene_26 9833.67014 8641.40718 6943.24903 3979.33541 2681.9859 2377.90899 ## gene_27 8846.79612 4883.49683 331.55348 7751.48615 2204.3282 901.86260 ## gene_28 8127.30962 159.99405 7005.47215 4869.86893 9926.5615 2260.87408 ## gene_29 838.92134 7947.50249 9940.85307 9248.82146 4344.3312 5500.71862 ## gene_30 4063.08187 3823.09819 9307.69441 2234.06390 7953.7884 473.24284 ## gene_31 6395.14801 4229.40994 925.19732 5941.57904 5745.0848 4183.56484 ## gene_32 3495.15112 3494.89712 2036.25613 54.94248 9082.7123 1941.14842 ## gene_33 9804.30679 6137.64075 9126.95157 2260.33016 8004.0615 2929.70572 ## gene_34 1630.82981 4628.96295 8004.74485 23.16218 4787.8649 1816.66428 ## gene_35 9456.68286 3539.35022 191.76503 2579.32019 6603.1474 6149.99619 ## gene_36 2228.02799 659.46742 1340.84638 4385.58458 9179.2748 1739.11095 ## gene_37 5351.48646 9766.78535 2849.99653 5881.90895 6852.2423 8880.90910 ## gene_38 7488.43873 2099.80600 8332.89031 6384.03171 5998.7025 4654.48579 ## gene_39 7383.69358 285.43115 5148.59660 9726.39349 6579.3603 938.22845 ## gene_40 5956.79069 1726.86601 7456.62026 7053.79566 6595.1623 7279.95887 ## gene_41 1833.76318 4350.86691 6824.39400 2368.52442 4854.8657 9199.85012 ## gene_42 244.81673 1059.94733 7509.60110 313.22742 5150.7289 9019.28145 ## gene_43 8277.00138 1365.12110 5224.09183 4213.51631 4393.8157 2542.10767 ## gene_44 1104.23142 8565.83091 7138.10396 2273.99021 590.0170 6207.82896 ## gene_45 7110.61511 1020.15318 1177.35657 9082.44082 3491.3964 6519.53382 ## gene_46 5522.19764 6793.36239 1464.67259 3107.59068 3232.7059 4824.02145 ## gene_47 2691.50983 4148.65106 7643.42329 9393.15223 1066.8501 8082.30664 ## gene_48 4887.18849 6174.88874 4143.70657 1338.54990 3361.6389 5970.40478 ## gene_49 4250.86555 3252.10462 87.26875 1492.31311 1923.1181 6182.82909 ## gene_50 6353.25471 4538.03708 5622.62856 1343.18571 8821.6241 1887.20458 ## gene_51 2762.15655 6919.10475 4330.88389 784.64993 2978.7049 7331.70748 ## gene_52 413.41075 5683.88169 1922.35902 2386.40944 7119.6518 5888.71006 ## gene_53 5125.56792 9969.67691 3415.35594 4523.09285 2850.0824 9848.61152 ## gene_54 9217.24024 4974.68670 2472.49365 5436.89827 5020.3254 5547.29418 ## gene_55 8679.57238 8368.47472 8482.86850 8566.33885 415.2385 890.98787 ## gene_56 9062.86399 1699.21410 9901.46375 3681.31901 7816.4436 8966.61817 ## gene_57 7581.66320 3416.80114 1300.83996 3842.36656 526.8045 5165.53765 ## gene_58 7469.63510 8481.58459 6595.58215 4084.24404 9761.1814 1280.98174 ## gene_59 3981.80813 9022.92187 8715.16867 315.31083 9991.6445 1989.81504 ## gene_60 2696.74289 3875.31701 4142.45446 1312.50996 4653.3847 1235.14768 ## gene_61 2764.33582 2194.52381 7921.41213 8537.42579 7433.4492 2205.15255 ## gene_62 8399.37687 6556.65233 9363.03755 8786.06693 4014.3820 5860.88752 ## gene_63 2269.33723 5441.55018 8478.23398 5990.80875 8505.5629 1025.30295 ## gene_64 3318.36378 508.45458 3312.07117 8704.96956 2148.1326 1117.16517 ## gene_65 6183.24666 6840.75723 2313.23263 3344.98422 4999.9394 6401.56385 ## gene_66 9877.68435 3930.21603 4455.18731 319.68788 9601.0126 6093.91971 ## gene_67 3961.11714 1154.38458 3776.68743 6975.53444 5132.4581 5547.40336 ## gene_68 9672.94104 7865.22560 2877.84935 7010.22815 7348.3892 349.81508 ## gene_69 7741.39354 1182.63936 7297.93199 2361.85548 1282.9598 9229.26063 ## gene_70 876.31736 7592.67919 4576.71173 223.23573 6755.6726 7753.92218 ## gene_71 1635.68153 66.34592 7151.96604 2017.12453 7824.1681 8130.81249 ## gene_72 7116.86106 5080.03996 837.84207 3461.83996 4032.7659 2281.67782 ## gene_73 5056.12519 3538.00186 3951.23677 1562.33512 7761.8031 4305.96818 ## gene_74 6352.12499 9821.86472 740.21179 636.32983 2463.3737 5219.74978 ## gene_75 2890.37496 8572.71915 4401.29196 2121.04479 6462.6205 4997.07694 ## gene_76 582.10184 9806.19844 5202.54216 6073.35248 1000.1975 5132.39768 ## gene_77 5662.60608 847.00698 472.13846 8094.21554 6461.5530 8628.00558 ## gene_78 9951.20339 3428.48903 2422.04673 5719.03163 8820.5099 4345.99564 ## gene_79 8751.13063 8083.00256 2826.29541 5620.14465 435.6146 681.68668 ## gene_80 832.39665 3021.97610 8486.24425 1465.61351 2349.1920 1669.42098 ## gene_81 2222.40555 9463.37798 7666.00872 4427.33651 6452.0056 1075.44164 ## gene_82 7903.16335 4642.22841 4874.83370 8423.31587 269.4969 831.22762 ## gene_83 8800.18898 5525.01811 7951.77284 5239.70279 7959.6653 1607.81083 ## gene_84 1853.90709 2690.48264 4689.16539 8005.52779 6698.4953 8290.45012 ## gene_85 5986.94871 5662.26101 5618.32206 3444.11701 6699.5774 3977.94171 ## gene_86 5128.66624 5622.69247 1971.56324 1253.88030 7126.1616 1859.64991 ## gene_87 4441.42025 9001.07984 6253.62218 4376.11697 1160.9034 403.97753 ## gene_88 6574.72927 6146.81770 5065.81880 9358.75593 9739.5978 9656.62645 ## gene_89 2244.21519 2478.86666 8480.53275 2792.16683 542.4989 3571.94018 ## gene_90 4143.96600 3956.68159 8239.89193 9800.24394 443.5033 2223.79688 ## gene_91 3218.01981 7396.82339 6940.62369 8424.14096 4503.7367 2539.22171 ## gene_92 6956.82543 751.33654 1843.12753 6530.76655 1668.3523 1783.61570 ## gene_93 9203.06373 6023.86592 2945.10781 1777.93467 3105.6176 54.45819 ## gene_94 450.73139 8424.44782 9907.05415 449.73130 5391.1992 7774.69081 ## gene_95 2817.49874 8237.71399 2825.82731 6512.61283 3369.8928 3545.95462 ## gene_96 8045.30273 4976.52214 8277.03544 4510.38959 3828.4367 8777.94914 ## gene_97 8214.54422 8965.16053 1470.61508 7682.92475 9623.2360 1890.48829 ## gene_98 5400.88606 8517.69021 5220.83317 321.73672 251.1668 3894.03133 ## gene_99 79.84365 5484.91986 3705.10522 8159.68100 9183.0892 2772.38077 ## gene_100 2685.89867 5952.52864 5224.00427 6870.00039 3607.2588 9687.82692 ## gene_101 6903.69027 7317.42720 8311.23400 3627.57778 4559.3358 4777.52053 ## gene_102 4478.88717 5908.82215 9160.82342 3461.88055 4527.3542 194.38298 ## gene_103 5611.75365 856.82232 1381.82740 6998.01951 4754.1773 2758.67977 ## gene_104 1904.69899 4321.19119 8615.64167 8398.16793 6208.5898 4368.91610 ## gene_105 5890.97051 5611.12986 6111.70257 5186.56046 1315.6439 9846.01316 ## gene_106 5797.81222 89.85542 5252.50862 8881.36039 168.6323 4446.44386 ## gene_107 4608.53518 1585.22288 3393.91908 1453.13877 4726.6317 5104.42933 ## gene_108 3749.12418 7372.32597 5523.21610 7408.18563 7934.4117 9686.80317 ## gene_109 3156.01337 2876.07041 8760.21553 1422.27067 9565.6915 5270.03607 ## gene_110 7255.79126 8315.12369 9582.40587 5564.01057 2714.9371 9653.27129 ## gene_111 3840.31486 3565.77254 5995.33401 7685.37058 1837.8735 8459.69308 ## gene_112 8408.92003 6335.78823 1296.01403 3358.67115 1596.4708 90.94874 ## gene_113 4163.07337 115.10929 8668.70947 2724.04556 4074.7793 5860.92960 ## gene_114 1768.59719 8793.34749 3038.37801 5893.27097 9300.4048 8929.05286 ## gene_115 2447.56227 1586.49700 690.53236 6167.78670 5907.7999 2570.16340 ## gene_116 3894.25499 9754.67268 2581.50663 8304.77640 8357.4917 3128.65448 ## gene_117 3886.31224 2438.32300 5767.01189 9601.98549 5437.6554 1051.44253 ## gene_118 4998.83682 1316.76181 4643.94913 2518.24096 6745.7193 2871.00644 ## gene_119 9150.75517 3188.01483 5117.92718 3440.49481 1217.2405 857.35688 ## gene_120 2706.82939 480.69766 7247.89327 4586.51790 1126.6740 539.94731 ## gene_121 5964.26804 3272.46846 4829.85040 5545.12363 2313.2853 7622.79575 ## gene_122 6954.59323 7830.26308 2094.21443 6627.24253 2596.7321 1986.55712 ## gene_123 5336.20324 1216.45073 3401.97553 9383.47387 8821.5695 2124.28432 ## gene_124 7433.69933 3805.98520 1527.40532 7144.74589 4033.3224 741.16231 ## gene_125 1462.98412 2905.74987 3579.37424 7988.77118 4961.2885 3370.19765 ## gene_126 6763.73791 8987.55562 5603.98118 7790.91309 3364.2548 1825.06037 ## gene_127 2805.94131 5761.84408 8767.73971 2273.67268 9821.5780 6387.84824 ## gene_128 4972.08802 8282.75302 7021.42044 5150.97487 7850.4815 6338.68683 ## gene_129 2281.28735 3848.47587 2808.18239 9870.03202 1892.9321 9882.63050 ## gene_130 4124.30354 1770.18494 3085.12488 492.97333 6543.5881 775.80133 ## gene_131 5595.89541 8229.91351 106.69284 8261.34559 5728.8644 8395.24479 ## gene_132 3707.70988 8643.88107 6720.97941 3738.60100 1991.5686 6139.25746 ## gene_133 3224.47829 277.40441 1164.16065 6514.96271 5751.0644 500.69077 ## gene_134 49.81098 5127.55317 7765.85174 7287.91459 3622.5447 9248.63872 ## gene_135 7959.78130 442.54204 1101.69547 5379.04894 3491.2792 7822.39993 ## gene_136 2095.61257 3865.31198 195.38203 141.47600 9011.7306 106.77673 ## gene_137 8010.84876 4957.48100 9937.41487 8586.28196 2465.4876 7255.61696 ## gene_138 3751.45813 4869.84278 6974.60027 2818.76967 3289.3587 8928.37100 ## gene_139 8517.88347 8873.17617 4232.18445 7825.20941 793.6533 6049.99967 ## gene_140 559.09748 7953.70202 7898.17321 7007.24977 8958.1675 1641.50865 ## gene_141 8013.90916 9344.11632 1116.50398 1915.09292 7531.7758 9182.94937 ## gene_142 9690.43546 6455.96179 1955.59296 3987.87627 1877.4703 2905.05357 ## gene_143 8845.66962 7215.55403 8622.69887 6349.35486 3149.9783 4893.56240 ## gene_144 4470.79652 5234.54336 4356.21288 5065.60584 8420.1635 7055.78045 ## gene_145 6877.58721 9198.25875 5181.50565 9611.66795 3084.4356 1929.76263 ## gene_146 1516.38675 3049.77772 8778.99134 7329.57491 5049.8384 2327.19203 ## gene_147 3968.12270 2904.44872 7871.37065 8082.89890 5059.0680 2664.45960 ## gene_148 1277.32665 1535.15559 7821.18490 9256.91630 6758.8613 350.78358 ## gene_149 675.31669 1976.98485 7335.08705 449.91547 1544.0309 3626.89294 ## gene_150 9201.76480 6448.57023 8364.44794 8644.41677 6227.0986 3460.96548 ## gene_151 3969.49029 6926.72619 2352.06886 8916.48345 3123.8134 4993.82224 ## gene_152 8301.86690 3362.16913 3165.96562 9952.26878 3965.8049 1043.15527 ## gene_153 7559.35859 6397.40470 7768.86830 8280.59858 9535.5072 9300.92471 ## gene_154 5198.18112 7006.49621 2703.00669 2926.83490 2604.5916 2647.39517 ## gene_155 660.72666 6920.98177 2675.00192 4250.78679 1114.4415 9089.87501 ## gene_156 5263.09709 1508.46782 2988.88208 4809.50866 5465.1921 8136.13040 ## gene_157 2165.39871 3807.66195 8909.70970 9640.47672 4042.1222 602.91620 ## gene_158 6704.15235 7934.72072 1000.18410 5750.35004 5807.5511 1823.63782 ## gene_159 9589.87676 9050.14094 4311.96314 4156.55483 4034.5455 4471.92048 ## gene_160 9512.35196 8956.11758 7456.57447 6248.03849 1462.2563 4464.28682 ## gene_161 4227.33762 8033.73702 7243.05458 5650.61720 1225.3349 7844.65442 ## gene_162 1122.13585 8103.39846 9342.96298 5428.62190 9050.4630 8463.86994 ## gene_163 6388.10686 6931.89483 613.25415 7272.34080 7272.1024 4864.38385 ## gene_164 6409.52239 6342.94812 8275.49664 747.32927 1537.7940 7845.21767 ## gene_165 1485.44703 2514.85639 5837.20304 3600.26256 7860.7622 8957.64439 ## gene_166 9679.54115 1097.81682 1109.90187 8021.27295 4295.0810 3503.28435 ## [ reached getOption(&quot;max.print&quot;) -- omitted 34 rows ] # Saber si herendan el objeto summarized experiment para poder utilizar isee #inherits(sce, &quot;SummarizedExperiment&quot;) ## ----isee_basic, eval = FALSE------------------------------------------------------------------------------------------------- ## ## Explora el objeto rse de forma interactiva library(&quot;iSEE&quot;) ## Loading required package: SingleCellExperiment iSEE::iSEE(rse) Shiny applications not supported in static R Markdown documents ## ----download_sce_layer------------------------------------------------------------------------------------------------------- ## Descarguemos unos datos de spatialLIBD sce_layer &lt;- spatialLIBD::fetch_data(&quot;sce_layer&quot;) ## snapshotDate(): 2020-10-27 ## adding rname &#39;https://www.dropbox.com/s/bg8xwysh2vnjwvg/Human_DLPFC_Visium_processedData_sce_scran_sce_layer_spatialLIBD.Rdata?dl=1&#39; ## 2021-02-27 14:54:49 loading file ~/Library/Caches/BiocFileCache/1cd24a5a297e_Human_DLPFC_Visium_processedData_sce_scran_sce_layer_spatialLIBD.Rdata%3Fdl%3D1 sce_layer ## class: SingleCellExperiment ## dim: 22331 76 ## metadata(0): ## assays(2): counts logcounts ## rownames(22331): ENSG00000243485 ENSG00000238009 ... ENSG00000278384 ENSG00000271254 ## rowData names(10): source type ... is_top_hvg is_top_hvg_sce_layer ## colnames(76): 151507_Layer1 151507_Layer2 ... 151676_Layer6 151676_WM ## colData names(12): sample_name layer_guess ... layer_guess_reordered layer_guess_reordered_short ## reducedDimNames(6): PCA TSNE_perplexity5 ... UMAP_neighbors15 PCAsub ## altExpNames(0): ## Revisemos el tamaño de este objeto pryr::object_size(sce_layer) ## Registered S3 method overwritten by &#39;pryr&#39;: ## method from ## print.bytes Rcpp ## 34 MB ## ----explore_sce_layer, eval = FALSE------------------------------------------------------------------------------------------ ## iSEE::iSEE(sce_layer) Shinny apps para crear apps en Rstudio https://www.shinyapps.io/ ## ----isee_basic, eval = FALSE------------------------------------------------------------------------------------------------- ## ## Explora el objeto rse de forma interactiva library(&quot;iSEE&quot;) iSEE::iSEE(rse) Shiny applications not supported in static R Markdown documents ## ----download_sce_layer------------------------------------------------------------------------------------------------------- ## Descarguemos unos datos de spatialLIBD sce_layer &lt;- spatialLIBD::fetch_data(&quot;sce_layer&quot;) ## snapshotDate(): 2020-10-27 ## 2021-02-27 14:54:53 loading file ~/Library/Caches/BiocFileCache/1cd24a5a297e_Human_DLPFC_Visium_processedData_sce_scran_sce_layer_spatialLIBD.Rdata%3Fdl%3D1 sce_layer ## class: SingleCellExperiment ## dim: 22331 76 ## metadata(0): ## assays(2): counts logcounts ## rownames(22331): ENSG00000243485 ENSG00000238009 ... ENSG00000278384 ENSG00000271254 ## rowData names(10): source type ... is_top_hvg is_top_hvg_sce_layer ## colnames(76): 151507_Layer1 151507_Layer2 ... 151676_Layer6 151676_WM ## colData names(12): sample_name layer_guess ... layer_guess_reordered layer_guess_reordered_short ## reducedDimNames(6): PCA TSNE_perplexity5 ... UMAP_neighbors15 PCAsub ## altExpNames(0): ## Revisemos el tamaño de este objeto pryr::object_size(sce_layer) ## 34 MB ## ----explore_sce_layer, eval = FALSE------------------------------------------------------------------------------------------ ## iSEE::iSEE(sce_layer) # Ejercicio Reproducir imagen en 3.4 y agregar a repositorio PCA1vs2 "],["ejercicio-2-realizar-el-heatmap.html", "3 Ejercicio 2 Realizar el heatmap", " 3 Ejercicio 2 Realizar el heatmap MBP y MOBP son los que más se relacionan en White Matter "],["proyecto-recount.html", "4 Proyecto Recount", " 4 Proyecto Recount 70 mil muestras de RNA-seq uniformemente procesaadas Democratización de los datos Cualquiera puede tener acceso a datos sin tener acceso a software recount workflow parquete de bioconductor Cuantificar niveles de expresión a lo largo de genes exones regiones sin anotación Provienen de sequence read archive los datos crudos SRA Se rediseña recount 2 a recount 3 ahora son 700 mil muestras pkgdown permite hacer pagina web de paquetes de R 140 mil dolares - 2 dolares por muestras en computo para procesar las muestras library(&quot;recount3&quot;) ## ----&#39;quick_example&#39;------------------------------------------------------------------------------- ## Revisemos todos los proyectos con datos de humano en recount3 human_projects &lt;- available_projects() ## Encuentra tu proyecto de interés. Aquí usaremos ## SRP009615 de ejemplo proj_info &lt;- subset( human_projects, project == &quot;SRP009615&quot; &amp; project_type == &quot;data_sources&quot; ) ## Crea un objetio de tipo RangedSummarizedExperiment (RSE) ## con la información a nivel de genes rse_gene_SRP009615 &lt;- create_rse(proj_info) ## Explora el objeto RSE rse_gene_SRP009615 ## ----&quot;interactive_display&quot;, eval = FALSE----------------------------------------------------------- ## ## Explora los proyectos disponibles de forma interactiva ## proj_info_interactive &lt;- interactiveDisplayBase::display(human_projects) ## ## Selecciona un solo renglón en la tabla y da click en &quot;send&quot;. ## ## ## Aquí verificamos que solo seleccionaste un solo renglón. ## stopifnot(nrow(proj_info_interactive) == 1) ## ## Crea el objeto RSE ## rse_gene_interactive &lt;- create_rse(proj_info_interactive) ## ----&quot;tranform_counts&quot;----------------------------------------------------------------------------- ## Convirtamos las cuentas por nucleotido a cuentas por lectura ## usando compute_read_counts(). ## Para otras transformaciones como RPKM y TPM, revisa transform_counts(). assay(rse_gene_SRP009615, &quot;counts&quot;) &lt;-compute_read_counts(rse_gene_SRP009615) ## ----&quot;expand_attributes&quot;--------------------------------------------------------------------------- ## Para este estudio en específico, hagamos más fácil de usar la ## información del experimento rse_gene_SRP009615 &lt;- expand_sra_attributes(rse_gene_SRP009615) colData(rse_gene_SRP009615)[ , grepl(&quot;^sra_attribute&quot;, colnames(colData(rse_gene_SRP009615))) ] iSEE::iSEE(rse_gene_SRP009615) # Ejercicio library(&quot;recount3&quot;) # Encuentra tu proyecto de interés. Aquí usaremos ## SRP009615 de ejemplo human_projects&lt;-available_projects() ## 2021-02-27 14:54:59 caching file sra.recount_project.MD.gz. ## 2021-02-27 14:55:00 caching file gtex.recount_project.MD.gz. ## 2021-02-27 14:55:02 caching file tcga.recount_project.MD.gz. proj_info &lt;- subset( human_projects, project == &quot;SRP009615&quot; &amp; project_type == &quot;data_sources&quot; ) rse_gene_SRP009615&lt;- create_rse(proj_info) ## 2021-02-27 14:55:10 downloading and reading the metadata. ## 2021-02-27 14:55:13 caching file sra.sra.SRP009615.MD.gz. ## 2021-02-27 14:55:14 caching file sra.recount_project.SRP009615.MD.gz. ## 2021-02-27 14:55:15 caching file sra.recount_qc.SRP009615.MD.gz. ## 2021-02-27 14:55:16 caching file sra.recount_seq_qc.SRP009615.MD.gz. ## 2021-02-27 14:55:17 caching file sra.recount_pred.SRP009615.MD.gz. ## 2021-02-27 14:55:19 downloading and reading the feature information. ## 2021-02-27 14:55:20 caching file human.gene_sums.G026.gtf.gz. ## 2021-02-27 14:55:21 downloading and reading the counts: 12 samples across 63856 features. ## 2021-02-27 14:55:24 caching file sra.gene_sums.SRP009615.G026.gz. ## 2021-02-27 14:55:25 construcing the RangedSummarizedExperiment (rse) object. ## ----&quot;tranform_counts&quot;----------------------------------------------------------------------------- ## Convirtamos las cuentas por nucleotido a cuentas por lectura ## usando compute_read_counts(). ## Para otras transformaciones como RPKM y TPM, revisa transform_counts(). assay(rse_gene_SRP009615, &quot;counts&quot;) &lt;- compute_read_counts(rse_gene_SRP009615) "],["modelos.html", "5 Modelos 5.1 ExploreModelMatrix 5.2 Datos de SRP045638 5.3 Normalización de datos 5.4 Expresión diferencial 5.5 Visualizando genes DE 5.6 Ejercicio 5.7 Comunidad 5.8 Ejercicio: respuesta 5.9 Específicaciones del proyecto", " 5 Modelos Revisión de regresión lineal https://lcolladotor.github.io/bioc_team_ds/helping-others.html#linear-regression-example Con R, usamos mucho la función model.matrix() y la sintáxis de fórmula Y ~ X1 + X2 tal como en el siguiente ejemplo. Signo + dice que tenemos más de una variable relacionado a la variable Y cuando tus dos variables entre si \\(X_1\\) y \\(x_2\\) están relacionadas nivel socioeconómico o ot Una sola variable antes de la tilde que es la Y \\(Y ~ X_1 + X_2\\) la Y está relacionada con todas las x`s ## ?model.matrix mat &lt;- with(trees, model.matrix(log(Volume) ~ log(Height) + log(Girth))) mat ## (Intercept) log(Height) log(Girth) ## 1 1 4.248495 2.116256 ## 2 1 4.174387 2.151762 ## 3 1 4.143135 2.174752 ## 4 1 4.276666 2.351375 ## 5 1 4.394449 2.370244 ## 6 1 4.418841 2.379546 ## 7 1 4.189655 2.397895 ## 8 1 4.317488 2.397895 ## 9 1 4.382027 2.406945 ## 10 1 4.317488 2.415914 ## 11 1 4.369448 2.424803 ## 12 1 4.330733 2.433613 ## 13 1 4.330733 2.433613 ## 14 1 4.234107 2.459589 ## 15 1 4.317488 2.484907 ## 16 1 4.304065 2.557227 ## 17 1 4.442651 2.557227 ## 18 1 4.454347 2.587764 ## 19 1 4.262680 2.617396 ## 20 1 4.158883 2.624669 ## 21 1 4.356709 2.639057 ## 22 1 4.382027 2.653242 ## 23 1 4.304065 2.674149 ## 24 1 4.276666 2.772589 ## 25 1 4.343805 2.791165 ## 26 1 4.394449 2.850707 ## 27 1 4.406719 2.862201 ## 28 1 4.382027 2.884801 ## 29 1 4.382027 2.890372 ## 30 1 4.382027 2.890372 ## 31 1 4.465908 3.025291 ## attr(,&quot;assign&quot;) ## [1] 0 1 2 colnames(mat) ## [1] &quot;(Intercept)&quot; &quot;log(Height)&quot; &quot;log(Girth)&quot; ¿Cómo interpretamos los nombres de las columnas de mat? Para cada uno de nuestros betas tenemos dos valores - Valor estimado - desciiación estandar - Valor t si ese beta es significativemten - P value - Buscamos que el valor p sea menor a 0.05 de nuestra muestra x1 = log(height) x2= log (grith) Si tenemos 20 mil genes tenemos 20 mil regresiones lineales summary(lm(log(Volume) ~ log(Height) + log(Girth), data = trees)) ## ## Call: ## lm(formula = log(Volume) ~ log(Height) + log(Girth), data = trees) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.168561 -0.048488 0.002431 0.063637 0.129223 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -6.63162 0.79979 -8.292 5.06e-09 *** ## log(Height) 1.11712 0.20444 5.464 7.81e-06 *** ## log(Girth) 1.98265 0.07501 26.432 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.08139 on 28 degrees of freedom ## Multiple R-squared: 0.9777, Adjusted R-squared: 0.9761 ## F-statistic: 613.2 on 2 and 28 DF, p-value: &lt; 2.2e-16 5.1 ExploreModelMatrix Es un paquete de Bioconductor que nos ayuda a entender los modelos estadísticos que estamos usando gracias a visualizaciones http://www.bioconductor.org/packages/ExploreModelMatrix/ que está descrito en el siguiente artículo Revisaremos los ejemplos en http://www.bioconductor.org/packages/release/bioc/vignettes/ExploreModelMatrix/inst/doc/ExploreModelMatrix.html 5.1.1 Ejemplo 1 library(ExploreModelMatrix) ## Datos de ejemplo (sampleData &lt;- data.frame( genotype = rep(c(&quot;A&quot;, &quot;B&quot;), each = 4), treatment = rep(c(&quot;ctrl&quot;, &quot;trt&quot;), 4) )) ## genotype treatment ## 1 A ctrl ## 2 A trt ## 3 A ctrl ## 4 A trt ## 5 B ctrl ## 6 B trt ## 7 B ctrl ## 8 B trt mod&lt;- model.matrix(~genotype + treatment, data= sampleData) ## Creemos las imágenes usando ExploreModelMatrix vd &lt;- ExploreModelMatrix::VisualizeDesign( sampleData = sampleData, # tenemos la tilde y no hay nada antes porque no tenemos Y # genotipo más tratamiento designFormula = ~ genotype + treatment, textSizeFitted = 4 ) ## Veamos las imágenes # nos ayuda a interpretar que es cada uno de los coeficientes # genotipo # treatmentrt # Buscar los cuadros que te den genotipo B cowplot::plot_grid(plotlist = vd$plotlist) De forma interactiva podemos correr el siguiente código: ## Usaremos shiny otra ves app &lt;- ExploreModelMatrix( sampleData = sampleData, designFormula = ~ genotype + treatment ) if (interactive()) shiny::runApp(app) 5.1.2 Ejemplo 2 http://bioconductor.org/packages/release/bioc/vignettes/ExploreModelMatrix/inst/doc/ExploreModelMatrix.html#example-2 Basado en pregunta de un usuario Tenemos 4 variables, respuesta : resistentes sensibles ID paciente : 1-6 8,11.. Tratamiento: pre y post ind.n Divides respuesta= resistente divides respuesta = sensitiva ### Ejemplo 3 http://bioconductor.org/packages/release/bioc/vignettes/ExploreModelMatrix/inst/doc/ExploreModelMatrix.html#example-3 Se le agrega un 0 después de la tilde porque no queremos la variable de intercept se quita la coluna de conditionko_minus porque si no lo elimino en el resultado de R vemos que porque necesitamos que nuestras variables sean independientes 5.1.3 Ejercicio Interpreta ResponseResistant.Treatmentpre del ejercicio 2. Puede ser útil tomar un screenshot (captura de pantalla) y anotarla con líneas de colores. Si haces eso, puedes incluir la imagen en tus notas. ¿Por qué es clave el 0 al inicio de la fórmula en el ejercicio 3? 5.2 Datos de SRP045638 Vamos a usar datos de https://www.ncbi.nlm.nih.gov/sra/?term=SRP045638 procesados con recount3. Primero hay que descargar los datos con los comandos que vimos ayer. library(&quot;recount3&quot;) human_projects &lt;- available_projects() ## 2021-02-27 14:55:30 caching file sra.recount_project.MD.gz. ## 2021-02-27 14:55:31 caching file gtex.recount_project.MD.gz. ## 2021-02-27 14:55:33 caching file tcga.recount_project.MD.gz. rse_gene_SRP045638 &lt;- create_rse( subset( human_projects, project == &quot;SRP045638&quot; &amp; project_type == &quot;data_sources&quot; ) ) ## 2021-02-27 14:55:38 downloading and reading the metadata. ## 2021-02-27 14:55:41 caching file sra.sra.SRP045638.MD.gz. ## 2021-02-27 14:55:42 caching file sra.recount_project.SRP045638.MD.gz. ## 2021-02-27 14:55:43 caching file sra.recount_qc.SRP045638.MD.gz. ## 2021-02-27 14:55:44 caching file sra.recount_seq_qc.SRP045638.MD.gz. ## 2021-02-27 14:55:45 caching file sra.recount_pred.SRP045638.MD.gz. ## 2021-02-27 14:55:47 downloading and reading the feature information. ## 2021-02-27 14:55:48 caching file human.gene_sums.G026.gtf.gz. ## 2021-02-27 14:55:49 downloading and reading the counts: 66 samples across 63856 features. ## 2021-02-27 14:55:52 caching file sra.gene_sums.SRP045638.G026.gz. ## 2021-02-27 14:55:53 construcing the RangedSummarizedExperiment (rse) object. assay(rse_gene_SRP045638, &quot;counts&quot;) &lt;- compute_read_counts(rse_gene_SRP045638) human_projects ## project organism file_source project_home project_type n_samples ## 1 SRP107565 human sra data_sources/sra data_sources 216 ## 2 SRP149665 human sra data_sources/sra data_sources 4 ## 3 SRP017465 human sra data_sources/sra data_sources 23 ## 4 SRP119165 human sra data_sources/sra data_sources 6 ## 5 SRP133965 human sra data_sources/sra data_sources 12 ## 6 SRP096765 human sra data_sources/sra data_sources 7 ## 7 SRP124965 human sra data_sources/sra data_sources 12 ## 8 SRP189165 human sra data_sources/sra data_sources 15 ## 9 SRP050365 human sra data_sources/sra data_sources 10 ## 10 SRP123065 human sra data_sources/sra data_sources 41 ## 11 SRP162465 human sra data_sources/sra data_sources 8 ## 12 SRP178865 human sra data_sources/sra data_sources 24 ## 13 SRP032165 human sra data_sources/sra data_sources 24 ## 14 SRP125965 human sra data_sources/sra data_sources 72 ## 15 SRP120165 human sra data_sources/sra data_sources 18 ## 16 SRP044265 human sra data_sources/sra data_sources 6 ## 17 SRP014565 human sra data_sources/sra data_sources 1 ## 18 SRP057065 human sra data_sources/sra data_sources 51 ## 19 SRP117665 human sra data_sources/sra data_sources 9 ## 20 SRP049465 human sra data_sources/sra data_sources 4 ## 21 SRP007665 human sra data_sources/sra data_sources 1 ## 22 SRP124265 human sra data_sources/sra data_sources 2 ## 23 SRP187765 human sra data_sources/sra data_sources 14 ## 24 SRP157965 human sra data_sources/sra data_sources 63 ## 25 SRP150065 human sra data_sources/sra data_sources 18 ## 26 SRP201065 human sra data_sources/sra data_sources 4 ## 27 SRP169065 human sra data_sources/sra data_sources 12 ## 28 SRP119065 human sra data_sources/sra data_sources 4 ## 29 SRP048565 human sra data_sources/sra data_sources 18 ## 30 SRP092465 human sra data_sources/sra data_sources 8 ## 31 SRP047065 human sra data_sources/sra data_sources 13 ## 32 SRP105765 human sra data_sources/sra data_sources 6 ## 33 SRP013565 human sra data_sources/sra data_sources 2212 ## 34 SRP072665 human sra data_sources/sra data_sources 9 ## 35 SRP132065 human sra data_sources/sra data_sources 3 ## 36 SRP094565 human sra data_sources/sra data_sources 24 ## 37 SRP187565 human sra data_sources/sra data_sources 12 ## 38 SRP212065 human sra data_sources/sra data_sources 11 ## 39 SRP126165 human sra data_sources/sra data_sources 30 ## 40 SRP078365 human sra data_sources/sra data_sources 8 ## 41 SRP075565 human sra data_sources/sra data_sources 9 ## 42 SRP099865 human sra data_sources/sra data_sources 12 ## 43 SRP077565 human sra data_sources/sra data_sources 22 ## 44 SRP115565 human sra data_sources/sra data_sources 32 ## 45 ERP010065 human sra data_sources/sra data_sources 8 ## 46 SRP071665 human sra data_sources/sra data_sources 4 ## 47 SRP201365 human sra data_sources/sra data_sources 79 ## 48 SRP033365 human sra data_sources/sra data_sources 1 ## 49 SRP110765 human sra data_sources/sra data_sources 16 ## 50 SRP045065 human sra data_sources/sra data_sources 8 ## 51 SRP098865 human sra data_sources/sra data_sources 12 ## 52 SRP182665 human sra data_sources/sra data_sources 16 ## 53 SRP152865 human sra data_sources/sra data_sources 8 ## 54 SRP108065 human sra data_sources/sra data_sources 14 ## 55 SRP125165 human sra data_sources/sra data_sources 13 ## 56 SRP056665 human sra data_sources/sra data_sources 12 ## 57 SRP068565 human sra data_sources/sra data_sources 20 ## 58 SRP066865 human sra data_sources/sra data_sources 24 ## 59 SRP072365 human sra data_sources/sra data_sources 11 ## 60 SRP163265 human sra data_sources/sra data_sources 8 ## 61 SRP165165 human sra data_sources/sra data_sources 12 ## 62 SRP072865 human sra data_sources/sra data_sources 8 ## 63 SRP066365 human sra data_sources/sra data_sources 12 ## 64 ERP106765 human sra data_sources/sra data_sources 6 ## 65 SRP167165 human sra data_sources/sra data_sources 36 ## 66 ERP109065 human sra data_sources/sra data_sources 3 ## 67 SRP181265 human sra data_sources/sra data_sources 8 ## 68 SRP065865 human sra data_sources/sra data_sources 30 ## 69 SRP182965 human sra data_sources/sra data_sources 24 ## 70 SRP100165 human sra data_sources/sra data_sources 4 ## 71 SRP103065 human sra data_sources/sra data_sources 6 ## 72 SRP142465 human sra data_sources/sra data_sources 8 ## 73 SRP031765 human sra data_sources/sra data_sources 1 ## 74 SRP045565 human sra data_sources/sra data_sources 5 ## 75 SRP071965 human sra data_sources/sra data_sources 355 ## 76 SRP116165 human sra data_sources/sra data_sources 4 ## 77 SRP193065 human sra data_sources/sra data_sources 24 ## 78 SRP119465 human sra data_sources/sra data_sources 368 ## 79 SRP108765 human sra data_sources/sra data_sources 4 ## 80 SRP092065 human sra data_sources/sra data_sources 14 ## 81 SRP070165 human sra data_sources/sra data_sources 4 ## 82 SRP075965 human sra data_sources/sra data_sources 6 ## 83 SRP167965 human sra data_sources/sra data_sources 9 ## 84 SRP211765 human sra data_sources/sra data_sources 3 ## 85 SRP194165 human sra data_sources/sra data_sources 6 ## 86 SRP004965 human sra data_sources/sra data_sources 3 ## 87 SRP073065 human sra data_sources/sra data_sources 2 ## 88 DRP000665 human sra data_sources/sra data_sources 7 ## 89 SRP212665 human sra data_sources/sra data_sources 24 ## 90 SRP116965 human sra data_sources/sra data_sources 12 ## 91 SRP149965 human sra data_sources/sra data_sources 6 ## 92 DRP004465 human sra data_sources/sra data_sources 4 ## 93 SRP137465 human sra data_sources/sra data_sources 1 ## 94 SRP126765 human sra data_sources/sra data_sources 12 ## 95 SRP109765 human sra data_sources/sra data_sources 37 ## 96 SRP096865 human sra data_sources/sra data_sources 12 ## 97 SRP064165 human sra data_sources/sra data_sources 8 ## 98 SRP167265 human sra data_sources/sra data_sources 6 ## 99 SRP149865 human sra data_sources/sra data_sources 36 ## 100 SRP218865 human sra data_sources/sra data_sources 8 ## 101 SRP114965 human sra data_sources/sra data_sources 10 ## 102 SRP051765 human sra data_sources/sra data_sources 41 ## 103 SRP189565 human sra data_sources/sra data_sources 38 ## 104 SRP142765 human sra data_sources/sra data_sources 5 ## 105 SRP062865 human sra data_sources/sra data_sources 20 ## 106 SRP029365 human sra data_sources/sra data_sources 4 ## 107 SRP127665 human sra data_sources/sra data_sources 4 ## 108 SRP095865 human sra data_sources/sra data_sources 2 ## 109 SRP092165 human sra data_sources/sra data_sources 2 ## 110 SRP035665 human sra data_sources/sra data_sources 2 ## 111 SRP108712 human sra data_sources/sra data_sources 23 ## 112 SRP116312 human sra data_sources/sra data_sources 12 ## 113 SRP180012 human sra data_sources/sra data_sources 4 ## 114 SRP185812 human sra data_sources/sra data_sources 6 ## 115 SRP191312 human sra data_sources/sra data_sources 2 ## 116 SRP186312 human sra data_sources/sra data_sources 36 ## 117 SRP219912 human sra data_sources/sra data_sources 9 ## 118 SRP076812 human sra data_sources/sra data_sources 16 ## 119 DRP002712 human sra data_sources/sra data_sources 1 ## 120 SRP066112 human sra data_sources/sra data_sources 2 ## 121 SRP057512 human sra data_sources/sra data_sources 10 ## 122 SRP135512 human sra data_sources/sra data_sources 15 ## 123 SRP103812 human sra data_sources/sra data_sources 47 ## 124 SRP117312 human sra data_sources/sra data_sources 36 ## 125 ERP104512 human sra data_sources/sra data_sources 1908 ## 126 SRP216512 human sra data_sources/sra data_sources 9 ## 127 SRP066012 human sra data_sources/sra data_sources 20 ## 128 SRP055512 human sra data_sources/sra data_sources 12 ## 129 SRP190212 human sra data_sources/sra data_sources 14 ## 130 SRP113012 human sra data_sources/sra data_sources 22 ## 131 SRP006912 human sra data_sources/sra data_sources 5 ## 132 SRP164912 human sra data_sources/sra data_sources 4 ## 133 SRP095212 human sra data_sources/sra data_sources 9 ## 134 SRP062212 human sra data_sources/sra data_sources 7 ## 135 SRP073112 human sra data_sources/sra data_sources 49 ## 136 SRP028912 human sra data_sources/sra data_sources 18 ## 137 SRP173312 human sra data_sources/sra data_sources 12 ## 138 SRP052612 human sra data_sources/sra data_sources 20 ## 139 SRP121512 human sra data_sources/sra data_sources 24 ## 140 SRP067012 human sra data_sources/sra data_sources 12 ## 141 SRP114312 human sra data_sources/sra data_sources 8 ## 142 SRP097912 human sra data_sources/sra data_sources 10 ## 143 ERP015612 human sra data_sources/sra data_sources 30 ## 144 SRP056612 human sra data_sources/sra data_sources 20 ## 145 SRP166012 human sra data_sources/sra data_sources 9 ## 146 SRP127412 human sra data_sources/sra data_sources 8 ## 147 SRP148112 human sra data_sources/sra data_sources 5 ## 148 SRP065812 human sra data_sources/sra data_sources 52 ## 149 SRP150612 human sra data_sources/sra data_sources 9 ## 150 SRP223012 human sra data_sources/sra data_sources 1 ## 151 SRP066912 human sra data_sources/sra data_sources 3 ## 152 SRP033612 human sra data_sources/sra data_sources 1 ## 153 SRP105312 human sra data_sources/sra data_sources 11 ## 154 SRP067312 human sra data_sources/sra data_sources 9 ## 155 SRP166112 human sra data_sources/sra data_sources 864 ## 156 ERP009612 human sra data_sources/sra data_sources 6 ## 157 SRP144312 human sra data_sources/sra data_sources 3 ## 158 ERP006112 human sra data_sources/sra data_sources 2 ## 159 SRP032812 human sra data_sources/sra data_sources 20 ## 160 SRP061412 human sra data_sources/sra data_sources 8 ## 161 SRP078912 human sra data_sources/sra data_sources 34 ## 162 SRP095512 human sra data_sources/sra data_sources 10 ## 163 SRP150212 human sra data_sources/sra data_sources 6 ## 164 SRP144912 human sra data_sources/sra data_sources 770 ## 165 SRP042212 human sra data_sources/sra data_sources 15 ## 166 SRP056912 human sra data_sources/sra data_sources 3 ## [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 8576 rows ] Una vez descargados y con los números de lecturas podemos usar expand_sra_attributes(). Sin embargo, tenemos un problema con estos datos. # tiene un development stage fetal que no todos tienen rse_gene_SRP045638$sra.sample_attributes[1:3] ## [1] &quot;age;;67.78|biomaterial_provider;;LIBD|BioSampleModel;;Human|dev_stage;;Fetal|disease;;Control|Fraction;;total|isolate;;DLPFC|race;;AA|RIN;;8.3|sex;;female|tissue;;DLPFC&quot; ## [2] &quot;age;;40.42|biomaterial_provider;;LIBD|BioSampleModel;;Human|disease;;Control|Fraction;;total|isolate;;DLPFC|race;;AA|RIN;;8.4|sex;;male|tissue;;DLPFC&quot; ## [3] &quot;age;;41.58|biomaterial_provider;;LIBD|BioSampleModel;;Human|disease;;control|Fraction;;total|isolate;;R2869|race;;AA|RIN;;8.7|sex;;male|tissue;;DLPFC&quot; Vamos a intentar resolverlo eliminando información que está presente solo en ciertas muestras. # gsub permite buscar patrones y cambiarlos, también eliminamos el pipe entonces lo escapamos con \\\\ rse_gene_SRP045638$sra.sample_attributes &lt;- gsub(&quot;dev_stage;;Fetal\\\\|&quot;, &quot;&quot;, rse_gene_SRP045638$sra.sample_attributes) # checamos y ya está correcto rse_gene_SRP045638$sra.sample_attributes[1:3] ## [1] &quot;age;;67.78|biomaterial_provider;;LIBD|BioSampleModel;;Human|disease;;Control|Fraction;;total|isolate;;DLPFC|race;;AA|RIN;;8.3|sex;;female|tissue;;DLPFC&quot; ## [2] &quot;age;;40.42|biomaterial_provider;;LIBD|BioSampleModel;;Human|disease;;Control|Fraction;;total|isolate;;DLPFC|race;;AA|RIN;;8.4|sex;;male|tissue;;DLPFC&quot; ## [3] &quot;age;;41.58|biomaterial_provider;;LIBD|BioSampleModel;;Human|disease;;control|Fraction;;total|isolate;;R2869|race;;AA|RIN;;8.7|sex;;male|tissue;;DLPFC&quot; Ahora si podemos continuar con el mismo código de ayer. rse_gene_SRP045638 &lt;- expand_sra_attributes(rse_gene_SRP045638) colData(rse_gene_SRP045638)[ , grepl(&quot;^sra_attribute&quot;, colnames(colData(rse_gene_SRP045638))) ] ## DataFrame with 66 rows and 10 columns ## sra_attribute.age sra_attribute.biomaterial_provider sra_attribute.BioSampleModel sra_attribute.disease ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR2071341 67.78 LIBD Human Control ## SRR2071345 40.42 LIBD Human Control ## SRR2071346 41.58 LIBD Human control ## SRR2071347 44.17 LIBD Human control ## SRR2071348 -0.3836 LIBD Human control ## ... ... ... ... ... ## SRR2071366 66.72 LIBD Human control ## SRR2071372 43.88 LIBD Human control ## SRR2071373 15.17 LIBD Human control ## SRR2071374 70.95 LIBD Human control ## SRR2071375 4.14 LIBD Human control ## sra_attribute.Fraction sra_attribute.isolate sra_attribute.race sra_attribute.RIN sra_attribute.sex ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## SRR2071341 total DLPFC AA 8.3 female ## SRR2071345 total DLPFC AA 8.4 male ## SRR2071346 total R2869 AA 8.7 male ## SRR2071347 total R3098 AA 5.3 female ## SRR2071348 total R3452 AA 9.6 female ## ... ... ... ... ... ... ## SRR2071366 total R3763 CAUC 7 female ## SRR2071372 total R4166 AA 8.7 male ## SRR2071373 total R4196 CAUC 7.9 female ## SRR2071374 total R4338 AS 8.3 male ## SRR2071375 total R4699 CAUC 8.7 male ## sra_attribute.tissue ## &lt;character&gt; ## SRR2071341 DLPFC ## SRR2071345 DLPFC ## SRR2071346 DLPFC ## SRR2071347 DLPFC ## SRR2071348 DLPFC ## ... ... ## SRR2071366 DLPFC ## SRR2071372 DLPFC ## SRR2071373 DLPFC ## SRR2071374 DLPFC ## SRR2071375 DLPFC Como ahora si vamos a usar esta información para un modelo estadístico, será importante que tengamos en el formato correcto de R a la información que vamos a usar. - Vamos a recompertir al objeto de R que queremos - RIN es RNA integrity number (se usa para ver qué tan bien está la muestra, valores más altos son mejores. Se intenta usar RIN 7 o más ) ## Pasar de character a nuemric o factor # volvemos numericos rse_gene_SRP045638$sra_attribute.age &lt;- as.numeric(rse_gene_SRP045638$sra_attribute.age) # volvemos categóricos rse_gene_SRP045638$sra_attribute.disease &lt;- factor(rse_gene_SRP045638$sra_attribute.disease) rse_gene_SRP045638$sra_attribute.RIN &lt;- as.numeric(rse_gene_SRP045638$sra_attribute.RIN) rse_gene_SRP045638$sra_attribute.sex &lt;- factor(rse_gene_SRP045638$sra_attribute.sex) ## Resumen de las variables de interés summary(as.data.frame(colData(rse_gene_SRP045638)[ , grepl(&quot;^sra_attribute.[age|disease|RIN|sex]&quot;, colnames(colData(rse_gene_SRP045638))) ])) ## sra_attribute.age sra_attribute.disease sra_attribute.isolate sra_attribute.RIN sra_attribute.sex ## Min. :-0.4986 control:62 Length:66 Min. :5.30 female:22 ## 1st Qu.: 0.3424 Control: 4 Class :character 1st Qu.:8.00 male :44 ## Median :14.9000 Mode :character Median :8.30 ## Mean :22.6286 Mean :8.15 ## 3rd Qu.:41.2900 3rd Qu.:8.70 ## Max. :73.9100 Max. :9.60 Ahora crearemos un par de variables para que las podamos usar en nuestro análisis. ## Encontraremos diferencias entre muestra prenatalas vs postnatales # si la edad es menor a 0 entonces es prenatal si no es postnatal # el cerebro prentatal y postnatal cambia mucho rse_gene_SRP045638$prenatal &lt;- factor(ifelse(rse_gene_SRP045638$sra_attribute.age &lt; 0, &quot;prenatal&quot;, &quot;postnatal&quot;)) table(rse_gene_SRP045638$prenatal) ## ## postnatal prenatal ## 56 10 ## http://research.libd.org/recount3-docs/docs/quality-check-fields.html # En recount3 alineamos contra una versión específica de anota # Da información de la calidad de los datos # Numero de lecturas asignadas a genes / numero total de lecturas que le dimos a featurecounts # usando rnaSeq existe el protocolo de polyA o ribozero que son dos tipos de librerias # intentamos capturar RNA mensajero, muchas de nuestras lecturas pueden provenir de eotras partes # Este porcentaje nos puede ayudar a determinar si hay un problema de calidad en las muestras # with(colData(rse_gene_SR)) # Se intentan generar al rededor de 80 millones de lecturas # Si no pudiste generar tantos datos entonces necesitas más réplicas (no lo vimos en 4 muestras entonces probablemente no está expresado) rse_gene_SRP045638$assigned_gene_prop &lt;- rse_gene_SRP045638$recount_qc.gene_fc_count_all.assigned / rse_gene_SRP045638$recount_qc.gene_fc_count_all.total # Nos indica que tal vez hay muestras malas summary(rse_gene_SRP045638$assigned_gene_prop) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.1942 0.7004 0.7591 0.7170 0.7991 0.8493 ## Hm... veamos si hay una diferencia entre los grupos # se puede usar purr # with te ayuda a a indicar que todas las variables viven en colData y ya no pones $ # la media es muy similar entre los dos grupos así como la mediana entre pre y postnatal with(colData(rse_gene_SRP045638), tapply(assigned_gene_prop, prenatal, summary)) ## $postnatal ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.1942 0.7072 0.7719 0.7179 0.8017 0.8493 ## ## $prenatal ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.6856 0.7004 0.7088 0.7116 0.7259 0.7347 A continuación podemos eliminar algunas muestras que consideremos de baja calidad y genes con niveles de expresión muy bajos. Promedios de expresión a lo largo de las muestras ## Guardemos nuestro objeto entero por si luego cambiamos de opinión rse_gene_SRP045638_unfiltered &lt;- rse_gene_SRP045638 ## Eliminemos a muestras malas hist(rse_gene_SRP045638$assigned_gene_prop) table(rse_gene_SRP045638$assigned_gene_prop &lt; 0.3) ## ## FALSE TRUE ## 65 1 # me quedo con las mayores a 0.3 # Podríamos eliminar tambien de baja calidad de RIN rse_gene_SRP045638 &lt;- rse_gene_SRP045638[, rse_gene_SRP045638$assigned_gene_prop &gt; 0.3] ## Calculemos los niveles medios de expresión de los genes en nuestras ## muestras. ## Ojo: en un análisis real probablemente haríamos esto con los RPKMs o CPMs ## en vez de las cuentas. gene_means &lt;- rowMeans(assay(rse_gene_SRP045638, &quot;counts&quot;)) # 1st qu es muy bajo .1 25% de nuestros genes casi no tienen datos summary(gene_means) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0 0.1 2.5 817.5 171.2 1362047.9 length(gene_means) ## [1] 63856 ## Eliminamos genes # nos quedamos con al rededor de 75% de los genes rse_gene_SRP045638 &lt;- rse_gene_SRP045638[gene_means &gt; 0.1, ] ## Dimensiones finales dim(rse_gene_SRP045638) ## [1] 46932 65 ## Porcentaje de genes que retuvimos round(nrow(rse_gene_SRP045638) / nrow(rse_gene_SRP045638_unfiltered) * 100, 2) ## [1] 73.5 Ahora ya estamos listos para continuar con el análisis de expresión diferencial, bueno, casi. 5.3 Normalización de datos Lean A hypothetical scenario en uno de los artículos sobre edgeR https://genomebiology.biomedcentral.com/articles/10.1186/gb-2010-11-3-r25#Sec2 para entender un poco sobre el concepto de composition bias. A hypothetical scenario Estimated normalization factors should ensure that a gene with the same expression level in two samples is not detected as DE. To further highlight the need for more sophisticated normalization procedures in RNA-seq data, consider a simple thought experiment. Imagine we have a sequencing experiment comparing two RNA populations, A and B. In this hypothetical scenario, suppose every gene that is expressed in B is expressed in A with the same number of transcripts. However, assume that sample A also contains a set of genes equal in number and expression that are not expressed in B. Thus, sample A has twice as many total expressed genes as sample B, that is, its RNA production is twice the size of sample B. Suppose that each sample is then sequenced to the same depth. Without any additional adjustment, a gene expressed in both samples will have, on average, half the number of reads from sample A, since the reads are spread over twice as many genes. Therefore, the correct normalization would adjust sample A by a factor of 2. Sigue siendo relevante con datos de scRNA-seq como pueden ver en http://bioconductor.org/books/release/OSCA/normalization.html#normalization-by-deconvolution. Ahí descubren una serie de pasos para usar métodos desarrollados para bulk RNA-seq y como se pueden usar en scRNA-seq. La idea de composition bias sigue siendo relevante BiocManager::install(&quot;edgeR&quot;, update = FALSE) ## Bioconductor version 3.12 (BiocManager 1.30.10), R 4.0.3 (2020-10-10) ## Installing package(s) &#39;edgeR&#39; ## ## The downloaded binary packages are in ## /var/folders/kc/yp3tpcv95bjfw4sq61_fmnxh0000gn/T//RtmpkGfe6g/downloaded_packages # PAquete antes de que existiera SummarizedExperiment object library(&quot;edgeR&quot;) ## Loading required package: limma ## ## Attaching package: &#39;limma&#39; ## The following object is masked from &#39;package:BiocGenerics&#39;: ## ## plotMA ## ## Attaching package: &#39;edgeR&#39; ## The following object is masked from &#39;package:SingleCellExperiment&#39;: ## ## cpm # Para crear un objeto dge dge &lt;- DGEList( counts = assay(rse_gene_SRP045638, &quot;counts&quot;), genes = rowData(rse_gene_SRP045638) ) # Nos permite ajustar mediante el artículo de arriba dge &lt;- calcNormFactors(dge) # Explorar la relación entre las variables # pre postnatal, sexo y assigned gene proportion En este punto se recomienda hacer gráficas para explorar la contribución de variables en la variación de niveles de expresión variancePartition y scatter 5.4 Expresión diferencial Primero que nada, definamos nuestro modelo estadístico. Típicamente, exploraríamos más los datos para revisar que no haya otros problemas con las muestras y para explorar la relación entre nuestras variables. library(&quot;ggplot2&quot;) ggplot(as.data.frame(colData(rse_gene_SRP045638)), aes(y = assigned_gene_prop, x = prenatal)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;Assigned Gene Prop&quot;) + xlab(&quot;Age Group&quot;) Por ejemplo, usando el paquete de variancePartition y scater entre otros tal como exploramos en el siguiente video del club de R de LIBD (notes in English)/ Por ahora continuaremos con el siguiente modelo estadístico. mod &lt;- model.matrix(~ prenatal + sra_attribute.RIN + sra_attribute.sex + assigned_gene_prop, data = colData(rse_gene_SRP045638) ) # Acordarme que era cada uno de los coeficientes # Cuales son las variables que estamos evaluando además de cual no es el nivel de referencia. El que no es es el male, el que no es es el prenatal colnames(mod) ## [1] &quot;(Intercept)&quot; &quot;prenatalprenatal&quot; &quot;sra_attribute.RIN&quot; &quot;sra_attribute.sexmale&quot; ## [5] &quot;assigned_gene_prop&quot; # El grupo de referencia es postnatal # rse_gene_SRP045638$prenatal Ya teniendo el modelo estadístico, podemos usar limma para realizar el análisis de expresión diferencial como tal. - Existen varios modelos estadísticos para el análisis de expresión diferencial - Usamos lima que se desarrolló en la era de los microarreglos - implement amodelos de regresión lineal que permite velocidad y estabilidad - Mejores estimados de la desviación estandar de los estimados para cada gen - valores t más estables que se convierten en valores p - Método voom permite usar lima para datos de expresión de RNAseq - podemos usar directamente el paquete de EdgeR ya normalizado y nuestro modelo Volcano plot y ma plot son gráficos básicos d library(&quot;limma&quot;) vGene &lt;- voom(dge, mod, plot = TRUE) # version mas eficiente eb_results &lt;- eBayes(lmFit(vGene)) # tabla con los coeficinetes, valor t , valor p, tenemos que decirle cual es el coeficiente basado en el modelo que nos interesa, intentaremos acomodar nuestro modelo de tal forma que sea la columna 2 el coeficiente que nos interesa de_results &lt;- topTable( eb_results, coef = 2, number = nrow(rse_gene_SRP045638), # que no ordene los resultados sort.by = &quot;none&quot; ) # logFC es el coeficiente de interés # mayor expresión en el numerador será positivo el LogFC # la dirección del logFC concuerda con la dirección del valor p # identical(sign(de_results$locFc), sign(de_result$t)) dim(de_results) ## [1] 46932 16 head(de_results) ## source type score phase gene_id gene_type gene_name level ## ENSG00000223972.5 HAVANA gene 1735 NA ENSG00000223972.5 transcribed_unprocessed_pseudogene DDX11L1 2 ## ENSG00000278267.1 ENSEMBL gene 68 NA ENSG00000278267.1 miRNA MIR6859-1 3 ## ENSG00000227232.5 HAVANA gene 1351 NA ENSG00000227232.5 unprocessed_pseudogene WASH7P 2 ## ENSG00000284332.1 ENSEMBL gene 138 NA ENSG00000284332.1 miRNA MIR1302-2 3 ## ENSG00000243485.5 HAVANA gene 1021 NA ENSG00000243485.5 lincRNA MIR1302-2HG 2 ## ENSG00000237613.2 HAVANA gene 1219 NA ENSG00000237613.2 lincRNA FAM138A 2 ## havana_gene tag logFC AveExpr t P.Value adj.P.Val B ## ENSG00000223972.5 OTTHUMG00000000961.2 &lt;NA&gt; -0.4464473 -3.4480071 -1.616387 1.108073e-01 1.399351e-01 -5.5871402 ## ENSG00000278267.1 &lt;NA&gt; &lt;NA&gt; 1.1238124 -1.3154875 6.175776 4.669176e-08 1.730504e-07 7.9671608 ## ENSG00000227232.5 OTTHUMG00000000958.1 &lt;NA&gt; 0.6932616 3.6372886 5.723387 2.807302e-07 9.348513e-07 5.8016259 ## ENSG00000284332.1 &lt;NA&gt; &lt;NA&gt; 0.4646765 -5.7349490 1.467797 1.469350e-01 1.811388e-01 -5.7535500 ## ENSG00000243485.5 OTTHUMG00000000959.2 ncRNA_host 0.9705984 -0.6684675 5.110633 2.985939e-06 8.551661e-06 3.8413461 ## ENSG00000237613.2 OTTHUMG00000000960.1 &lt;NA&gt; -1.5393441 -5.3057586 -4.169751 9.126976e-05 1.967694e-04 0.8591194 ## Genes diferencialmente expresados entre pre y post natal con FDR &lt; 5% # FDR= BH por el nombre de los autores # puedes fijarte en el top 50 con el FDR más chiquitos si fueran muchos pero generalmente salen muy poquitos table(de_results$adj.P.Val &lt; 0.05) ## ## FALSE TRUE ## 12898 34034 ## Visualicemos los resultados estadísticos # valores positivos dicen que son mas altos en postnatal, valores negativos dice que son mas expresados en prenatal plotMA(eb_results, coef = 2) # volcanoplot muesta en el eje y el valor p pero convertido a -log 10 de tal forma que valores más exremos son valores más chicos del valor p original # volcanoplot(eb_results, coef = 2, highlight = 3, names = de_results$gene_name) # que reslate los 3 genes de mayor señal de_results[de_results$gene_name %in% c(&quot;ZSCAN2&quot;, &quot;VASH2&quot;, &quot;KIAA0922&quot;), ] ## source type score phase gene_id gene_type gene_name level havana_gene tag ## ENSG00000143494.15 HAVANA gene 9086 NA ENSG00000143494.15 protein_coding VASH2 2 OTTHUMG00000036925.5 &lt;NA&gt; ## ENSG00000176371.13 HAVANA gene 4878 NA ENSG00000176371.13 protein_coding ZSCAN2 1 OTTHUMG00000074027.5 &lt;NA&gt; ## ENSG00000121210.15 HAVANA gene 6393 NA ENSG00000121210.15 protein_coding KIAA0922 2 OTTHUMG00000153244.5 &lt;NA&gt; ## logFC AveExpr t P.Value adj.P.Val B ## ENSG00000143494.15 5.451644 1.873147 37.90413 2.394912e-46 5.619900e-42 95.16926 ## ENSG00000176371.13 2.742707 2.747266 36.79465 1.543986e-45 2.415411e-41 93.31745 ## ENSG00000121210.15 3.290165 2.941427 42.25191 2.535399e-49 1.189913e-44 101.80839 https://www.genecards.org/cgi-bin/carddisp.pl?gene=ZSCAN2 https://www.genecards.org/cgi-bin/carddisp.pl?gene=VASH2 https://www.genecards.org/cgi-bin/carddisp.pl?gene=KIAA0922 5.5 Visualizando genes DE De vGene$E podemos extraer los datos normalizados por limma-voom. Revisemos los top 50 genes diferencialmente expresados. Visualizar 10 dimensiones es más fácil ## Extraer valores de los genes de interés # Extraer de los primero 50 genes ordenados por su valor p y sacas sus valores de expresión normalizados exprs_heatmap &lt;- vGene$E[rank(de_results$adj.P.Val) &lt;= 50, ] class(exprs_heatmap) ## [1] &quot;matrix&quot; &quot;array&quot; dim(exprs_heatmap) ## [1] 50 65 ## Creemos una tabla con información de las muestras ## y con nombres de columnas más amigables df &lt;- as.data.frame(colData(rse_gene_SRP045638)[, c(&quot;prenatal&quot;, &quot;sra_attribute.RIN&quot;, &quot;sra_attribute.sex&quot;)]) # Cambio los nombres para más orden colnames(df) &lt;- c(&quot;AgeGroup&quot;, &quot;RIN&quot;, &quot;Sex&quot;) ## Hagamos un heatmap library(&quot;pheatmap&quot;) pheatmap( exprs_heatmap, # que agrupe los genes tanto en renglones como en cols que son las muestras cluster_rows = TRUE, cluster_cols = TRUE, show_rownames = FALSE, show_colnames = FALSE, annotation_col = df ) # 1 son genes diferenciados en edad pues nos muestra dos grupos muy diferentes , del lado derecho estan todas las de grupo prenatal y postnatal en derecho. 2 rin más bajos en blanco se agrupan, igual podríamos regresar y borrar esas muestras. 3. encuanto a sexo no hay un agrupamiento claro . 5 en el clustering en base a renglones Los resultados que tenemos no son tan sorprendentes porque hay una diferencia enorme en los perfiles de expresión en el DLPFC entre muestra pre y post-natales. Eso lo podemos ver con MDS (multidimensional scaling) tal como describen en este workflow. ## Para colores library(&quot;RColorBrewer&quot;) ## Conviertiendo los grupos de edad a colores col.group &lt;- df$AgeGroup levels(col.group) &lt;- brewer.pal(nlevels(col.group), &quot;Set1&quot;) ## Warning in brewer.pal(nlevels(col.group), &quot;Set1&quot;): minimal value for n is 3, returning requested palette with 3 different levels col.group &lt;- as.character(col.group) ## MDS por grupos de edad multidimensional scalling plotMDS(vGene$E, labels = df$AgeGroup, col = col.group) ## Conviertiendo los valores de Sex a colores col.sex &lt;- df$Sex levels(col.sex) &lt;- brewer.pal(nlevels(col.sex), &quot;Dark2&quot;) ## Warning in brewer.pal(nlevels(col.sex), &quot;Dark2&quot;): minimal value for n is 3, returning requested palette with 3 different levels col.sex &lt;- as.character(col.sex) ## MDS por sexo te fijas entonces en que están muy separados entre una condicion y otra plotMDS(vGene$E, labels = df$Sex, col = col.sex) 5.6 Ejercicio Agreguen los nombres de los genes a nuestro pheatmap. en los renglones para nuestros colegas biólogos Pistas: Revisen la información de rowRanges(rse_gene_SRP045638). Exploren que hace la función match(). para poder unir dos tablas ## Hagamos un heatmap library(&quot;pheatmap&quot;) nombres_rse_gene &lt;-rowRanges(rse_gene_SRP045638)$gene_name id_rse_gene &lt;- rowRanges(rse_gene_SRP045638)$gene_id exprs_heatmap &lt;- vGene$E[rank(de_results$adj.P.Val) &lt;= 50, ] posiciones &lt;- match(rownames(exprs_heatmap),id_rse_gene) # hacer un subconjunto de los ronames filtered_id_names &lt;-rowRanges(rse_gene_SRP045638)$gene_name[posiciones] # remplazar los nombres de exprs_heatmap head(exprs_heatmap) ## SRR2071341 SRR2071345 SRR2071346 SRR2071347 SRR2071348 SRR2071349 SRR2071350 SRR2071351 SRR2071352 ## ENSG00000004487.15 5.692763 5.606393 5.430083 5.1569628 7.518297 7.445085 5.781973 5.448240 7.176618 ## ENSG00000204178.9 4.811124 4.885577 4.990490 4.0719548 6.602715 6.447543 4.980434 4.816663 6.493733 ## ENSG00000162419.12 3.293328 3.148314 3.171269 2.9890020 5.619231 5.374634 3.465953 3.094800 5.318709 ## ENSG00000162415.6 3.160520 3.428597 3.237173 3.4659920 5.835181 5.810944 3.306355 3.105620 5.483980 ## ENSG00000085552.16 -2.428045 -1.525600 -1.740955 -0.6997084 5.823926 5.898864 -1.623354 -1.685655 5.064748 ## ENSG00000135829.16 6.919710 6.328120 6.620339 6.4279466 8.093594 8.091850 6.715528 6.727098 7.908553 ## SRR2071353 SRR2071354 SRR2071355 SRR2071356 SRR2071357 SRR2071358 SRR2071367 SRR2071368 SRR2071369 ## ENSG00000004487.15 5.556751 5.342522 5.6108146 5.40123972 5.6778968 5.595721 5.4210528 5.578470 5.741296 ## ENSG00000204178.9 4.809241 4.838252 4.9181433 4.97373564 4.9854609 4.864088 5.0068452 4.817734 4.934059 ## ENSG00000162419.12 3.279245 3.006375 3.7911593 3.64776299 3.5580599 3.256775 3.4922043 2.914296 3.416849 ## ENSG00000162415.6 3.147572 3.447960 3.6808560 3.07208609 3.5643530 3.094852 3.5083692 3.260165 3.342475 ## ENSG00000085552.16 -2.239830 -1.171817 0.4056524 0.08769592 0.7091167 -2.021886 -0.7830737 -3.472285 -2.212114 ## ENSG00000135829.16 6.404542 6.467804 6.5989476 6.41451229 6.6082238 6.720704 6.7896782 6.507378 6.759352 ## SRR2071370 SRR2071371 SRR2071376 SRR2071377 SRR2071378 SRR2071379 SRR1554533 SRR1554534 SRR1554536 ## ENSG00000004487.15 5.689600 5.745631 5.635053 7.952253 7.475059 7.979059 5.541552 5.635896 5.106621 ## ENSG00000204178.9 4.831015 5.006773 4.664567 6.490166 6.626266 6.593687 4.510478 4.910449 4.104646 ## ENSG00000162419.12 3.378930 3.133881 3.413172 5.413163 5.449081 5.542702 3.054074 3.230655 2.792566 ## ENSG00000162415.6 3.181437 3.326062 3.481478 5.588441 5.535767 5.914072 2.985952 3.441184 3.419442 ## ENSG00000085552.16 -2.643438 -2.659916 -1.222757 6.764201 5.767626 6.716638 -2.673846 -1.401001 -0.947675 ## ENSG00000135829.16 6.599360 6.820730 6.396282 8.357235 7.931288 8.160919 6.660800 6.373786 6.471711 ## SRR1554537 SRR1554539 SRR1554540 SRR1554541 SRR1554542 SRR1554543 SRR1554544 SRR1554546 SRR1554547 ## ENSG00000004487.15 7.462966 5.740171 5.459667 7.137450 5.577088 5.329421 5.6039939 5.6851706 5.582526 ## ENSG00000204178.9 6.514863 4.958525 4.822441 6.465591 4.821585 4.823587 4.8976781 4.9920093 4.803827 ## ENSG00000162419.12 5.561404 3.455911 3.086810 5.278213 3.255795 2.980218 3.7941796 3.5776137 3.211074 ## ENSG00000162415.6 5.757972 3.292025 3.131839 5.453689 3.167439 3.450818 3.6835242 3.6047392 3.142075 ## ENSG00000085552.16 5.747149 -1.692868 -1.833483 4.980003 -2.324414 -1.136216 0.3565132 0.6784039 -1.874925 ## ENSG00000135829.16 8.070399 6.713489 6.761215 7.908621 6.436612 6.473664 6.6091229 6.6381494 6.709908 ## SRR1554549 SRR1554550 SRR1554551 SRR1554552 SRR1554553 SRR1554555 SRR1554556 SRR1554557 SRR1554558 ## ENSG00000004487.15 5.793989 5.634839 5.62571457 5.758315 5.895725 5.311188 5.411240 5.507535 5.758238 ## ENSG00000204178.9 4.884880 4.927770 5.04839907 4.954594 5.311906 5.210338 5.013127 4.842563 4.954765 ## ENSG00000162419.12 3.581416 3.341922 3.47329697 3.774569 3.578363 2.381938 3.491525 2.702105 3.439599 ## ENSG00000162415.6 3.793732 3.154775 3.66939265 3.587606 3.700661 2.855540 3.514585 3.220487 3.374265 ## ENSG00000085552.16 0.350660 -3.571633 0.01017559 -1.113842 0.681692 -3.484311 -1.106573 -3.167138 -2.232827 ## ENSG00000135829.16 6.632186 6.579948 6.55151766 6.602276 6.637803 6.788319 6.819976 6.398397 6.819741 ## SRR1554559 SRR1554560 SRR1554561 SRR1554562 SRR1554563 SRR1554564 SRR1554565 SRR1554566 SRR1554568 ## ENSG00000004487.15 5.626921 5.597127 5.776923 5.458405 5.170338 5.611172 5.649376 7.971356 7.884582 ## ENSG00000204178.9 4.791485 5.006111 4.924816 4.748116 4.973657 4.849618 4.682468 6.517027 6.523926 ## ENSG00000162419.12 3.363460 3.122409 3.228505 3.329402 3.364144 3.511226 3.412549 5.423178 5.437399 ## ENSG00000162415.6 3.113869 3.190260 3.379007 2.747381 3.001906 3.461040 3.490597 5.621171 5.776315 ## ENSG00000085552.16 -2.397580 -2.073217 -1.121563 -1.944271 -1.082576 -1.308513 -1.349330 6.722448 6.507928 ## ENSG00000135829.16 6.552808 6.699049 6.376832 6.533807 6.421737 6.593186 6.434286 8.399187 8.099988 ## SRR2071359 SRR2071360 SRR2071361 SRR2071362 SRR2071363 SRR2071364 SRR2071365 SRR2071372 SRR2071373 ## ENSG00000004487.15 5.467089 5.7774767 5.612471 5.6127030 5.765383 5.9287563 5.749363 5.764838 5.449514 ## ENSG00000204178.9 4.839733 4.8690042 4.912722 5.0396130 4.945136 5.2379472 5.086634 4.882813 4.728208 ## ENSG00000162419.12 3.198120 3.5694797 3.321766 3.4993089 3.775119 3.6102983 3.236050 3.202146 3.350502 ## ENSG00000162415.6 3.254771 3.7662727 3.123410 3.6440209 3.590357 3.5663103 3.623968 3.348796 2.738244 ## ENSG00000085552.16 -2.254970 0.3482328 -3.638879 0.1027569 -1.112902 0.9033453 -1.264866 -1.098176 -1.817679 ## ENSG00000135829.16 6.567280 6.6005127 6.545583 6.5050058 6.579403 6.5488977 6.616591 6.340054 6.493427 ## SRR2071374 SRR2071375 ## ENSG00000004487.15 5.149179 5.599198 ## ENSG00000204178.9 4.940981 4.844950 ## ENSG00000162419.12 3.325939 3.523342 ## ENSG00000162415.6 2.959642 3.451274 ## ENSG00000085552.16 -1.027819 -1.250846 ## ENSG00000135829.16 6.410397 6.550054 exprs_heatmap ## SRR2071341 SRR2071345 SRR2071346 SRR2071347 SRR2071348 SRR2071349 SRR2071350 SRR2071351 ## ENSG00000004487.15 5.6927635 5.60639250 5.4300829 5.1569628 7.5182971 7.445085 5.78197294 5.44824036 ## ENSG00000204178.9 4.8111242 4.88557665 4.9904899 4.0719548 6.6027149 6.447543 4.98043404 4.81666268 ## ENSG00000162419.12 3.2933280 3.14831362 3.1712692 2.9890020 5.6192313 5.374634 3.46595299 3.09480017 ## ENSG00000162415.6 3.1605201 3.42859651 3.2371730 3.4659920 5.8351810 5.810944 3.30635513 3.10562043 ## ENSG00000085552.16 -2.4280446 -1.52559980 -1.7409548 -0.6997084 5.8239255 5.898864 -1.62335355 -1.68565475 ## ENSG00000135829.16 6.9197096 6.32812014 6.6203392 6.4279466 8.0935936 8.091850 6.71552814 6.72709758 ## ENSG00000117139.16 5.1828326 5.19297814 5.0553853 4.9334780 7.7999035 7.809068 5.50995622 5.16587892 ## ENSG00000186007.9 -1.3994755 -1.01863981 -0.8234170 -1.2471962 2.5143737 2.438267 -0.93746214 -1.78874824 ## ENSG00000143494.15 0.6075793 0.49325923 1.4757012 0.4786288 6.5360710 6.604665 0.88650750 0.48978726 ## ENSG00000234149.1 -1.0946209 -1.86663672 -1.9722804 -1.7777110 1.4363711 1.250600 -0.93746214 -1.25823352 ## ENSG00000156650.12 5.5878721 5.24814673 4.9403487 5.4132111 7.7639054 7.459461 5.32628288 5.16329190 ## ENSG00000110660.14 1.8137956 1.55738956 2.1077840 1.8205484 4.7959087 4.847012 1.69228828 1.32055040 ## ENSG00000154146.12 9.6725520 11.36245245 10.7615363 9.3005140 3.5591072 1.060040 10.66381929 10.02091570 ## ENSG00000205978.5 2.8573576 3.86852438 3.5055659 4.2883782 6.9708034 7.131151 3.22159096 3.27494643 ## ENSG00000066629.16 5.1207002 4.40513754 4.3042487 3.3877544 7.6680601 7.318142 5.12279562 5.19572296 ## SRR2071352 SRR2071353 SRR2071354 SRR2071355 SRR2071356 SRR2071357 SRR2071358 SRR2071367 ## ENSG00000004487.15 7.176618 5.5567507 5.342522497 5.6108146 5.40123972 5.6778968 5.59572081 5.4210528 ## ENSG00000204178.9 6.493733 4.8092409 4.838252396 4.9181433 4.97373564 4.9854609 4.86408784 5.0068452 ## ENSG00000162419.12 5.318709 3.2792448 3.006375155 3.7911593 3.64776299 3.5580599 3.25677485 3.4922043 ## ENSG00000162415.6 5.483980 3.1475722 3.447959809 3.6808560 3.07208609 3.5643530 3.09485197 3.5083692 ## ENSG00000085552.16 5.064748 -2.2398298 -1.171817462 0.4056524 0.08769592 0.7091167 -2.02188579 -0.7830737 ## ENSG00000135829.16 7.908553 6.4045416 6.467803929 6.5989476 6.41451229 6.6082238 6.72070435 6.7896782 ## ENSG00000117139.16 7.553997 5.1256595 5.196011483 5.3557516 5.78095208 5.4723944 5.34125342 5.1799800 ## ENSG00000186007.9 1.969966 -1.5877531 -2.329358739 -2.4017025 -2.50685263 -2.5791283 -0.95775546 -1.2790312 ## ENSG00000143494.15 6.722586 0.5870213 0.840566262 2.2944626 1.80639323 2.3822101 0.68191294 0.3780811 ## ENSG00000234149.1 1.291423 -1.6779509 -1.506236501 -1.1479459 -1.04218436 -1.5246805 -1.45157007 -1.5200393 ## ENSG00000156650.12 7.435749 5.0416036 5.407433444 5.5839205 5.39159761 5.7002144 5.38981777 5.1850171 ## ENSG00000110660.14 5.254463 1.9185996 2.383829472 2.4174940 2.75166630 2.9371779 1.82550379 1.6104923 ## ENSG00000154146.12 3.246470 10.3798771 10.481537261 10.1817239 8.61185490 9.5372907 10.27413527 10.0979986 ## ENSG00000205978.5 6.730769 3.1768170 3.338708004 4.2096061 3.51195956 4.1931228 2.98220696 3.3379417 ## ENSG00000066629.16 7.472138 4.8662034 4.469050749 4.3376887 3.99967315 4.3633862 5.08124303 4.8067987 ## SRR2071368 SRR2071369 SRR2071370 SRR2071371 SRR2071376 SRR2071377 SRR2071378 SRR2071379 SRR1554533 ## ENSG00000004487.15 5.5784704 5.7412962 5.6895997 5.7456311 5.6350531 7.9522525 7.4750586 7.9790595 5.5415522 ## ENSG00000204178.9 4.8177337 4.9340592 4.8310152 5.0067733 4.6645675 6.4901663 6.6262658 6.5936869 4.5104784 ## ENSG00000162419.12 2.9142959 3.4168489 3.3789298 3.1338812 3.4131718 5.4131627 5.4490809 5.5427024 3.0540744 ## ENSG00000162415.6 3.2601649 3.3424751 3.1814371 3.3260618 3.4814778 5.5884407 5.5357675 5.9140716 2.9859517 ## ENSG00000085552.16 -3.4722852 -2.2121138 -2.6434380 -2.6599156 -1.2227575 6.7642014 5.7676257 6.7166383 -2.6738460 ## ENSG00000135829.16 6.5073782 6.7593521 6.5993601 6.8207303 6.3962816 8.3572347 7.9312885 8.1609193 6.6607997 ## ENSG00000117139.16 5.1965998 5.5159906 5.3238641 5.5324946 5.2142677 7.6354156 7.5060939 7.9787155 4.4702457 ## ENSG00000186007.9 -1.1503571 -1.3130427 -1.3367766 -1.6259683 -1.7401567 3.2506122 2.8277884 3.2294364 -1.1999148 ## ENSG00000143494.15 1.0679074 0.4426190 1.0334470 1.4752439 0.2240426 6.0126527 6.6787295 6.6831084 0.3460535 ## ENSG00000234149.1 -1.4484384 -1.1547806 -1.1634450 -0.7854465 -1.3040576 1.8615699 0.9777962 1.5717308 -1.5958435 ## ENSG00000156650.12 5.3817520 5.1584558 5.4637103 5.6449517 5.0269891 7.4364788 7.3219500 7.9227110 4.8453534 ## ENSG00000110660.14 2.0066866 1.5756123 2.1058140 2.2400886 2.2294696 4.5501335 5.0634459 5.4108815 1.8635881 ## ENSG00000154146.12 10.3364444 10.6207709 9.5924346 9.2576873 11.6910003 1.0484787 2.2506377 0.7564473 10.5828050 ## ENSG00000205978.5 3.6754285 3.1680840 3.4384309 3.0936991 3.4784421 7.2009756 6.7039720 7.1661404 3.0173159 ## ENSG00000066629.16 4.5460077 5.1757871 4.5838613 4.8038033 5.2754496 7.4070817 7.0636727 7.8160365 4.9946451 ## SRR1554534 SRR1554536 SRR1554537 SRR1554539 SRR1554540 SRR1554541 SRR1554542 SRR1554543 ## ENSG00000004487.15 5.63589572 5.1066210 7.4629660 5.74017060 5.45966653 7.137450 5.5770880 5.32942122 ## ENSG00000204178.9 4.91044871 4.1046460 6.5148633 4.95852512 4.82244100 6.465591 4.8215851 4.82358658 ## ENSG00000162419.12 3.23065487 2.7925657 5.5614037 3.45591087 3.08681009 5.278213 3.2557949 2.98021804 ## ENSG00000162415.6 3.44118404 3.4194419 5.7579718 3.29202479 3.13183934 5.453689 3.1674390 3.45081830 ## ENSG00000085552.16 -1.40100087 -0.9476750 5.7471492 -1.69286832 -1.83348321 4.980003 -2.3244141 -1.13621555 ## ENSG00000135829.16 6.37378619 6.4717107 8.0703992 6.71348856 6.76121462 7.908621 6.4366122 6.47366370 ## ENSG00000117139.16 5.23753031 4.9170739 7.7634112 5.50773841 5.18932844 7.540866 5.1500390 5.20608906 ## ENSG00000186007.9 -1.12536643 -2.0851785 2.2919622 -1.13098943 -1.83348321 1.882354 -1.5279475 -2.29375683 ## ENSG00000143494.15 0.50081874 0.6372875 6.4686345 0.83367749 0.44152384 6.698254 0.5672097 0.85129351 ## ENSG00000234149.1 -1.74203779 -1.5997517 1.3453544 -0.95590273 -1.26788603 1.273751 -1.7143606 -1.47063459 ## ENSG00000156650.12 5.26620407 5.4178521 7.7098905 5.28604639 5.17595355 7.399726 5.0629230 5.39758406 ## ENSG00000110660.14 1.51094296 1.9327434 4.7254971 1.68960132 1.28421183 5.152897 1.9314841 2.36774723 ## ENSG00000154146.12 11.34415374 9.2282714 3.5113914 10.57549266 9.99056859 3.119644 10.3583842 10.44487137 ## ENSG00000205978.5 3.89989353 4.3174072 6.8937697 3.14603544 3.27587735 6.665568 3.1708098 3.30271966 ## ENSG00000066629.16 4.43188915 3.4446424 7.6133074 5.10402109 5.21047366 7.447585 4.8865776 4.47238979 ## SRR1554544 SRR1554546 SRR1554547 SRR1554549 SRR1554550 SRR1554551 SRR1554552 SRR1554553 SRR1554555 ## ENSG00000004487.15 5.6039939 5.6851706 5.58252649 5.7939891 5.6348392 5.62571457 5.7583151 5.8957254 5.3111881 ## ENSG00000204178.9 4.8976781 4.9920093 4.80382674 4.8848800 4.9277705 5.04839907 4.9545943 5.3119056 5.2103376 ## ENSG00000162419.12 3.7941796 3.5776137 3.21107376 3.5814159 3.3419218 3.47329697 3.7745692 3.5783628 2.3819381 ## ENSG00000162415.6 3.6835242 3.6047392 3.14207520 3.7937321 3.1547749 3.66939265 3.5876062 3.7006613 2.8555395 ## ENSG00000085552.16 0.3565132 0.6784039 -1.87492516 0.3506600 -3.5716325 0.01017559 -1.1138420 0.6816920 -3.4843105 ## ENSG00000135829.16 6.6091229 6.6381494 6.70990779 6.6321858 6.5799478 6.55151766 6.6022759 6.6378034 6.7883193 ## ENSG00000117139.16 5.3581035 5.4907658 5.26109364 5.4205833 5.1483266 5.37563551 5.5711297 5.6037779 4.5907229 ## ENSG00000186007.9 -2.3524381 -2.6823435 -0.85026310 -2.0167110 -0.5918104 -2.05210868 -1.6857484 -1.4797714 -2.7473449 ## ENSG00000143494.15 2.2914181 2.4242789 0.52448169 1.8272728 0.6071706 2.52931346 0.5886140 1.8647581 0.9080069 ## ENSG00000234149.1 -1.0986815 -1.4979189 -1.60362314 -0.9881419 -1.4561553 -1.09517741 -1.1672813 -0.9728114 -2.7473449 ## ENSG00000156650.12 5.5841999 5.7266617 5.19301911 5.4072032 5.0352867 5.70474194 5.3624807 5.4872273 4.9627727 ## ENSG00000110660.14 2.3775748 2.9588872 1.81012567 2.3700999 1.8546322 2.38790548 2.0325762 2.6342449 2.5960629 ## ENSG00000154146.12 10.1443581 9.5019402 10.50087266 10.1230833 10.6857799 9.88718964 10.9311171 9.9820042 9.2297203 ## ENSG00000205978.5 4.1986046 4.1812797 3.12662863 3.7709304 3.1364934 4.07353269 3.1090187 4.0388300 3.4660024 ## ENSG00000066629.16 4.3319060 4.3709654 5.09721287 4.4328504 5.1253350 4.25167206 5.2868822 4.9666590 4.3548933 ## SRR1554556 SRR1554557 SRR1554558 SRR1554559 SRR1554560 SRR1554561 SRR1554562 SRR1554563 SRR1554564 ## ENSG00000004487.15 5.4112402 5.5075355 5.7582381 5.6269208 5.5971272 5.7769234 5.4584050 5.1703380 5.6111724 ## ENSG00000204178.9 5.0131271 4.8425631 4.9547650 4.7914847 5.0061113 4.9248164 4.7481155 4.9736573 4.8496179 ## ENSG00000162419.12 3.4915247 2.7021050 3.4395988 3.3634601 3.1224089 3.2285051 3.3294024 3.3641442 3.5112257 ## ENSG00000162415.6 3.5145852 3.2204874 3.3742651 3.1138690 3.1902597 3.3790068 2.7473812 3.0019057 3.4610400 ## ENSG00000085552.16 -1.1065732 -3.1671383 -2.2328266 -2.3975796 -2.0732166 -1.1215635 -1.9442705 -1.0825763 -1.3085129 ## ENSG00000135829.16 6.8199759 6.3983966 6.8197415 6.5528081 6.6990494 6.3768325 6.5338072 6.4217374 6.5931863 ## ENSG00000117139.16 5.1963164 4.7780395 5.5474751 4.9887804 5.2692503 5.5095584 5.5747449 4.8761036 5.3808827 ## ENSG00000186007.9 -1.3348422 -0.8986495 -1.4591024 -0.8126171 -1.0313965 -0.7396929 -2.1047352 -1.3608775 -1.2122976 ## ENSG00000143494.15 0.3302906 1.0529102 0.3752196 0.9354037 1.5188006 0.8452696 0.4660134 1.1452296 1.1998283 ## ENSG00000234149.1 -1.4197311 -1.9827137 -0.9582042 -1.8500918 -0.8752773 -1.9180301 -1.9442705 -1.3608775 -1.6429319 ## ENSG00000156650.12 5.1900633 4.9513309 5.1784794 4.9054986 5.4020399 5.4269665 4.5899811 5.2063909 5.2644813 ## ENSG00000110660.14 1.5965707 2.1047491 1.5374910 2.2813591 2.4280352 1.5551416 2.0414216 1.9579778 2.2471340 ## ENSG00000154146.12 9.9890329 10.8809538 10.5998912 10.0435490 9.9202421 11.4212852 11.0342612 9.5932724 10.1920371 ## ENSG00000205978.5 3.3123078 3.8722793 3.1605985 3.5295146 3.3569899 3.9976921 2.7764687 3.0048865 3.8544860 ## ENSG00000066629.16 4.8102529 4.4442219 5.1942497 4.5610847 4.7913337 4.9195149 4.9556428 4.7749682 4.7441488 ## SRR1554565 SRR1554566 SRR1554568 SRR2071359 SRR2071360 SRR2071361 SRR2071362 SRR2071363 SRR2071364 ## ENSG00000004487.15 5.6493765 7.9713559 7.8845822 5.4670888 5.7774767 5.6124715 5.6127030 5.7653829 5.9287563 ## ENSG00000204178.9 4.6824677 6.5170273 6.5239255 4.8397330 4.8690042 4.9127220 5.0396130 4.9451357 5.2379472 ## ENSG00000162419.12 3.4125486 5.4231780 5.4373994 3.1981203 3.5694797 3.3217661 3.4993089 3.7751190 3.6102983 ## ENSG00000162415.6 3.4905970 5.6211712 5.7763146 3.2547705 3.7662727 3.1234103 3.6440209 3.5903565 3.5663103 ## ENSG00000085552.16 -1.3493295 6.7224479 6.5079279 -2.2549697 0.3482328 -3.6388794 0.1027569 -1.1129019 0.9033453 ## ENSG00000135829.16 6.4342860 8.3991870 8.0999882 6.5672796 6.6005127 6.5455827 6.5050058 6.5794033 6.5488977 ## ENSG00000117139.16 5.2393237 7.6681524 7.9234874 5.0399734 5.3906825 5.1148944 5.3275328 5.5496609 5.5449366 ## ENSG00000186007.9 -1.7882138 3.1547982 3.0571324 -1.8590411 -2.0847267 -0.6590573 -1.9891655 -1.5692801 -1.3096485 ## ENSG00000143494.15 0.2668276 6.0290704 6.6149205 0.4628870 1.7910534 0.6090481 2.4668105 0.6410797 1.6738634 ## ENSG00000234149.1 -1.3027869 1.9012638 1.4653888 -1.5487009 -1.0006624 -1.4512524 -1.1078100 -1.1129019 -1.3096485 ## ENSG00000156650.12 5.0511300 7.4564386 7.8283394 4.9957858 5.3861355 5.0085790 5.6746734 5.3589800 5.4633408 ## ENSG00000110660.14 2.2097811 4.5584180 5.2781954 1.5863325 2.3509019 1.8671526 2.3959021 2.0351222 2.4500884 ## ENSG00000154146.12 11.6370342 1.0170058 0.7216099 10.7556412 10.1598156 10.7068723 9.9115225 10.9823666 10.2178730 ## ENSG00000205978.5 3.4706401 7.1811818 7.0079968 3.3210007 3.7562401 3.1293049 4.0814497 3.1064308 4.0542872 ## ENSG00000066629.16 5.3013691 7.4354900 7.7328372 4.9477985 4.4179858 5.0999634 4.2192614 5.2843558 4.9296246 ## SRR2071365 SRR2071372 SRR2071373 SRR2071374 SRR2071375 ## ENSG00000004487.15 5.7493628 5.7648383 5.4495145 5.1491791 5.5991985 ## ENSG00000204178.9 5.0866337 4.8828127 4.7282085 4.9409810 4.8449503 ## ENSG00000162419.12 3.2360502 3.2021457 3.3505022 3.3259389 3.5233418 ## ENSG00000162415.6 3.6239682 3.3487956 2.7382435 2.9596421 3.4512740 ## ENSG00000085552.16 -1.2648659 -1.0981759 -1.8176793 -1.0278187 -1.2508462 ## ENSG00000135829.16 6.6165905 6.3400540 6.4934273 6.4103974 6.5500537 ## ENSG00000117139.16 5.6699252 5.4683924 5.5531976 4.8297796 5.3427429 ## ENSG00000186007.9 -1.7763663 -0.7530405 -1.9489239 -1.3777611 -1.2508462 ## ENSG00000143494.15 1.9334875 0.8113118 0.4269431 1.1445704 1.2204595 ## ENSG00000234149.1 -0.5107762 -1.9153119 -1.9489239 -1.4955976 -1.7716784 ## ENSG00000156650.12 5.9406538 5.4079038 4.5708996 5.1783316 5.2511718 ## ENSG00000110660.14 2.4812222 1.6052600 2.0639002 1.9356555 2.2631804 ## ENSG00000154146.12 9.7595398 11.4526423 11.0608798 9.6293898 10.2379829 ## ENSG00000205978.5 4.9512646 4.0266440 2.7646672 3.0118597 3.8481429 ## ENSG00000066629.16 4.9231877 4.8987746 4.9331369 4.7381240 4.7222640 ## [ reached getOption(&quot;max.print&quot;) -- omitted 35 rows ] row.names(exprs_heatmap) &lt;- filtered_id_names pheatmap( exprs_heatmap, # que agrupe los genes tanto en renglones como en cols que son las muestras cluster_rows = TRUE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE, annotation_col = df ) 5.7 Comunidad Algunxs de lxs autores de ExploreModelMatrix: https://twitter.com/CSoneson https://twitter.com/FedeBioinfo https://twitter.com/mikelove Algunxs de lxs autores de edgeR y limma: https://twitter.com/mritchieau https://twitter.com/davisjmcc https://twitter.com/markrobinsonca https://twitter.com/AliciaOshlack If you've ever been dazed by design matrices or confused by contrasts when performing gene expression analysis in limma, the new article by Charity Law is for you https://t.co/ZSMOA20tdm #bioconductor #rstats (1/2) — Matt Ritchie (@mritchieau) December 15, 2020 5.8 Ejercicio: respuesta ## Hagamos un heatmap library(&quot;pheatmap&quot;) nombres_rse_gene &lt;-rowRanges(rse_gene_SRP045638)$gene_name id_rse_gene &lt;- rowRanges(rse_gene_SRP045638)$gene_id exprs_heatmap &lt;- vGene$E[rank(de_results$adj.P.Val) &lt;= 50, ] posiciones &lt;- match(rownames(exprs_heatmap),id_rse_gene) # hacer un subconjunto de los ronames filtered_id_names &lt;-rowRanges(rse_gene_SRP045638)$gene_name[posiciones] # remplazar los nombres de exprs_heatmap head(exprs_heatmap) ## SRR2071341 SRR2071345 SRR2071346 SRR2071347 SRR2071348 SRR2071349 SRR2071350 SRR2071351 SRR2071352 ## ENSG00000004487.15 5.692763 5.606393 5.430083 5.1569628 7.518297 7.445085 5.781973 5.448240 7.176618 ## ENSG00000204178.9 4.811124 4.885577 4.990490 4.0719548 6.602715 6.447543 4.980434 4.816663 6.493733 ## ENSG00000162419.12 3.293328 3.148314 3.171269 2.9890020 5.619231 5.374634 3.465953 3.094800 5.318709 ## ENSG00000162415.6 3.160520 3.428597 3.237173 3.4659920 5.835181 5.810944 3.306355 3.105620 5.483980 ## ENSG00000085552.16 -2.428045 -1.525600 -1.740955 -0.6997084 5.823926 5.898864 -1.623354 -1.685655 5.064748 ## ENSG00000135829.16 6.919710 6.328120 6.620339 6.4279466 8.093594 8.091850 6.715528 6.727098 7.908553 ## SRR2071353 SRR2071354 SRR2071355 SRR2071356 SRR2071357 SRR2071358 SRR2071367 SRR2071368 SRR2071369 ## ENSG00000004487.15 5.556751 5.342522 5.6108146 5.40123972 5.6778968 5.595721 5.4210528 5.578470 5.741296 ## ENSG00000204178.9 4.809241 4.838252 4.9181433 4.97373564 4.9854609 4.864088 5.0068452 4.817734 4.934059 ## ENSG00000162419.12 3.279245 3.006375 3.7911593 3.64776299 3.5580599 3.256775 3.4922043 2.914296 3.416849 ## ENSG00000162415.6 3.147572 3.447960 3.6808560 3.07208609 3.5643530 3.094852 3.5083692 3.260165 3.342475 ## ENSG00000085552.16 -2.239830 -1.171817 0.4056524 0.08769592 0.7091167 -2.021886 -0.7830737 -3.472285 -2.212114 ## ENSG00000135829.16 6.404542 6.467804 6.5989476 6.41451229 6.6082238 6.720704 6.7896782 6.507378 6.759352 ## SRR2071370 SRR2071371 SRR2071376 SRR2071377 SRR2071378 SRR2071379 SRR1554533 SRR1554534 SRR1554536 ## ENSG00000004487.15 5.689600 5.745631 5.635053 7.952253 7.475059 7.979059 5.541552 5.635896 5.106621 ## ENSG00000204178.9 4.831015 5.006773 4.664567 6.490166 6.626266 6.593687 4.510478 4.910449 4.104646 ## ENSG00000162419.12 3.378930 3.133881 3.413172 5.413163 5.449081 5.542702 3.054074 3.230655 2.792566 ## ENSG00000162415.6 3.181437 3.326062 3.481478 5.588441 5.535767 5.914072 2.985952 3.441184 3.419442 ## ENSG00000085552.16 -2.643438 -2.659916 -1.222757 6.764201 5.767626 6.716638 -2.673846 -1.401001 -0.947675 ## ENSG00000135829.16 6.599360 6.820730 6.396282 8.357235 7.931288 8.160919 6.660800 6.373786 6.471711 ## SRR1554537 SRR1554539 SRR1554540 SRR1554541 SRR1554542 SRR1554543 SRR1554544 SRR1554546 SRR1554547 ## ENSG00000004487.15 7.462966 5.740171 5.459667 7.137450 5.577088 5.329421 5.6039939 5.6851706 5.582526 ## ENSG00000204178.9 6.514863 4.958525 4.822441 6.465591 4.821585 4.823587 4.8976781 4.9920093 4.803827 ## ENSG00000162419.12 5.561404 3.455911 3.086810 5.278213 3.255795 2.980218 3.7941796 3.5776137 3.211074 ## ENSG00000162415.6 5.757972 3.292025 3.131839 5.453689 3.167439 3.450818 3.6835242 3.6047392 3.142075 ## ENSG00000085552.16 5.747149 -1.692868 -1.833483 4.980003 -2.324414 -1.136216 0.3565132 0.6784039 -1.874925 ## ENSG00000135829.16 8.070399 6.713489 6.761215 7.908621 6.436612 6.473664 6.6091229 6.6381494 6.709908 ## SRR1554549 SRR1554550 SRR1554551 SRR1554552 SRR1554553 SRR1554555 SRR1554556 SRR1554557 SRR1554558 ## ENSG00000004487.15 5.793989 5.634839 5.62571457 5.758315 5.895725 5.311188 5.411240 5.507535 5.758238 ## ENSG00000204178.9 4.884880 4.927770 5.04839907 4.954594 5.311906 5.210338 5.013127 4.842563 4.954765 ## ENSG00000162419.12 3.581416 3.341922 3.47329697 3.774569 3.578363 2.381938 3.491525 2.702105 3.439599 ## ENSG00000162415.6 3.793732 3.154775 3.66939265 3.587606 3.700661 2.855540 3.514585 3.220487 3.374265 ## ENSG00000085552.16 0.350660 -3.571633 0.01017559 -1.113842 0.681692 -3.484311 -1.106573 -3.167138 -2.232827 ## ENSG00000135829.16 6.632186 6.579948 6.55151766 6.602276 6.637803 6.788319 6.819976 6.398397 6.819741 ## SRR1554559 SRR1554560 SRR1554561 SRR1554562 SRR1554563 SRR1554564 SRR1554565 SRR1554566 SRR1554568 ## ENSG00000004487.15 5.626921 5.597127 5.776923 5.458405 5.170338 5.611172 5.649376 7.971356 7.884582 ## ENSG00000204178.9 4.791485 5.006111 4.924816 4.748116 4.973657 4.849618 4.682468 6.517027 6.523926 ## ENSG00000162419.12 3.363460 3.122409 3.228505 3.329402 3.364144 3.511226 3.412549 5.423178 5.437399 ## ENSG00000162415.6 3.113869 3.190260 3.379007 2.747381 3.001906 3.461040 3.490597 5.621171 5.776315 ## ENSG00000085552.16 -2.397580 -2.073217 -1.121563 -1.944271 -1.082576 -1.308513 -1.349330 6.722448 6.507928 ## ENSG00000135829.16 6.552808 6.699049 6.376832 6.533807 6.421737 6.593186 6.434286 8.399187 8.099988 ## SRR2071359 SRR2071360 SRR2071361 SRR2071362 SRR2071363 SRR2071364 SRR2071365 SRR2071372 SRR2071373 ## ENSG00000004487.15 5.467089 5.7774767 5.612471 5.6127030 5.765383 5.9287563 5.749363 5.764838 5.449514 ## ENSG00000204178.9 4.839733 4.8690042 4.912722 5.0396130 4.945136 5.2379472 5.086634 4.882813 4.728208 ## ENSG00000162419.12 3.198120 3.5694797 3.321766 3.4993089 3.775119 3.6102983 3.236050 3.202146 3.350502 ## ENSG00000162415.6 3.254771 3.7662727 3.123410 3.6440209 3.590357 3.5663103 3.623968 3.348796 2.738244 ## ENSG00000085552.16 -2.254970 0.3482328 -3.638879 0.1027569 -1.112902 0.9033453 -1.264866 -1.098176 -1.817679 ## ENSG00000135829.16 6.567280 6.6005127 6.545583 6.5050058 6.579403 6.5488977 6.616591 6.340054 6.493427 ## SRR2071374 SRR2071375 ## ENSG00000004487.15 5.149179 5.599198 ## ENSG00000204178.9 4.940981 4.844950 ## ENSG00000162419.12 3.325939 3.523342 ## ENSG00000162415.6 2.959642 3.451274 ## ENSG00000085552.16 -1.027819 -1.250846 ## ENSG00000135829.16 6.410397 6.550054 exprs_heatmap ## SRR2071341 SRR2071345 SRR2071346 SRR2071347 SRR2071348 SRR2071349 SRR2071350 SRR2071351 ## ENSG00000004487.15 5.6927635 5.60639250 5.4300829 5.1569628 7.5182971 7.445085 5.78197294 5.44824036 ## ENSG00000204178.9 4.8111242 4.88557665 4.9904899 4.0719548 6.6027149 6.447543 4.98043404 4.81666268 ## ENSG00000162419.12 3.2933280 3.14831362 3.1712692 2.9890020 5.6192313 5.374634 3.46595299 3.09480017 ## ENSG00000162415.6 3.1605201 3.42859651 3.2371730 3.4659920 5.8351810 5.810944 3.30635513 3.10562043 ## ENSG00000085552.16 -2.4280446 -1.52559980 -1.7409548 -0.6997084 5.8239255 5.898864 -1.62335355 -1.68565475 ## ENSG00000135829.16 6.9197096 6.32812014 6.6203392 6.4279466 8.0935936 8.091850 6.71552814 6.72709758 ## ENSG00000117139.16 5.1828326 5.19297814 5.0553853 4.9334780 7.7999035 7.809068 5.50995622 5.16587892 ## ENSG00000186007.9 -1.3994755 -1.01863981 -0.8234170 -1.2471962 2.5143737 2.438267 -0.93746214 -1.78874824 ## ENSG00000143494.15 0.6075793 0.49325923 1.4757012 0.4786288 6.5360710 6.604665 0.88650750 0.48978726 ## ENSG00000234149.1 -1.0946209 -1.86663672 -1.9722804 -1.7777110 1.4363711 1.250600 -0.93746214 -1.25823352 ## ENSG00000156650.12 5.5878721 5.24814673 4.9403487 5.4132111 7.7639054 7.459461 5.32628288 5.16329190 ## ENSG00000110660.14 1.8137956 1.55738956 2.1077840 1.8205484 4.7959087 4.847012 1.69228828 1.32055040 ## ENSG00000154146.12 9.6725520 11.36245245 10.7615363 9.3005140 3.5591072 1.060040 10.66381929 10.02091570 ## ENSG00000205978.5 2.8573576 3.86852438 3.5055659 4.2883782 6.9708034 7.131151 3.22159096 3.27494643 ## ENSG00000066629.16 5.1207002 4.40513754 4.3042487 3.3877544 7.6680601 7.318142 5.12279562 5.19572296 ## SRR2071352 SRR2071353 SRR2071354 SRR2071355 SRR2071356 SRR2071357 SRR2071358 SRR2071367 ## ENSG00000004487.15 7.176618 5.5567507 5.342522497 5.6108146 5.40123972 5.6778968 5.59572081 5.4210528 ## ENSG00000204178.9 6.493733 4.8092409 4.838252396 4.9181433 4.97373564 4.9854609 4.86408784 5.0068452 ## ENSG00000162419.12 5.318709 3.2792448 3.006375155 3.7911593 3.64776299 3.5580599 3.25677485 3.4922043 ## ENSG00000162415.6 5.483980 3.1475722 3.447959809 3.6808560 3.07208609 3.5643530 3.09485197 3.5083692 ## ENSG00000085552.16 5.064748 -2.2398298 -1.171817462 0.4056524 0.08769592 0.7091167 -2.02188579 -0.7830737 ## ENSG00000135829.16 7.908553 6.4045416 6.467803929 6.5989476 6.41451229 6.6082238 6.72070435 6.7896782 ## ENSG00000117139.16 7.553997 5.1256595 5.196011483 5.3557516 5.78095208 5.4723944 5.34125342 5.1799800 ## ENSG00000186007.9 1.969966 -1.5877531 -2.329358739 -2.4017025 -2.50685263 -2.5791283 -0.95775546 -1.2790312 ## ENSG00000143494.15 6.722586 0.5870213 0.840566262 2.2944626 1.80639323 2.3822101 0.68191294 0.3780811 ## ENSG00000234149.1 1.291423 -1.6779509 -1.506236501 -1.1479459 -1.04218436 -1.5246805 -1.45157007 -1.5200393 ## ENSG00000156650.12 7.435749 5.0416036 5.407433444 5.5839205 5.39159761 5.7002144 5.38981777 5.1850171 ## ENSG00000110660.14 5.254463 1.9185996 2.383829472 2.4174940 2.75166630 2.9371779 1.82550379 1.6104923 ## ENSG00000154146.12 3.246470 10.3798771 10.481537261 10.1817239 8.61185490 9.5372907 10.27413527 10.0979986 ## ENSG00000205978.5 6.730769 3.1768170 3.338708004 4.2096061 3.51195956 4.1931228 2.98220696 3.3379417 ## ENSG00000066629.16 7.472138 4.8662034 4.469050749 4.3376887 3.99967315 4.3633862 5.08124303 4.8067987 ## SRR2071368 SRR2071369 SRR2071370 SRR2071371 SRR2071376 SRR2071377 SRR2071378 SRR2071379 SRR1554533 ## ENSG00000004487.15 5.5784704 5.7412962 5.6895997 5.7456311 5.6350531 7.9522525 7.4750586 7.9790595 5.5415522 ## ENSG00000204178.9 4.8177337 4.9340592 4.8310152 5.0067733 4.6645675 6.4901663 6.6262658 6.5936869 4.5104784 ## ENSG00000162419.12 2.9142959 3.4168489 3.3789298 3.1338812 3.4131718 5.4131627 5.4490809 5.5427024 3.0540744 ## ENSG00000162415.6 3.2601649 3.3424751 3.1814371 3.3260618 3.4814778 5.5884407 5.5357675 5.9140716 2.9859517 ## ENSG00000085552.16 -3.4722852 -2.2121138 -2.6434380 -2.6599156 -1.2227575 6.7642014 5.7676257 6.7166383 -2.6738460 ## ENSG00000135829.16 6.5073782 6.7593521 6.5993601 6.8207303 6.3962816 8.3572347 7.9312885 8.1609193 6.6607997 ## ENSG00000117139.16 5.1965998 5.5159906 5.3238641 5.5324946 5.2142677 7.6354156 7.5060939 7.9787155 4.4702457 ## ENSG00000186007.9 -1.1503571 -1.3130427 -1.3367766 -1.6259683 -1.7401567 3.2506122 2.8277884 3.2294364 -1.1999148 ## ENSG00000143494.15 1.0679074 0.4426190 1.0334470 1.4752439 0.2240426 6.0126527 6.6787295 6.6831084 0.3460535 ## ENSG00000234149.1 -1.4484384 -1.1547806 -1.1634450 -0.7854465 -1.3040576 1.8615699 0.9777962 1.5717308 -1.5958435 ## ENSG00000156650.12 5.3817520 5.1584558 5.4637103 5.6449517 5.0269891 7.4364788 7.3219500 7.9227110 4.8453534 ## ENSG00000110660.14 2.0066866 1.5756123 2.1058140 2.2400886 2.2294696 4.5501335 5.0634459 5.4108815 1.8635881 ## ENSG00000154146.12 10.3364444 10.6207709 9.5924346 9.2576873 11.6910003 1.0484787 2.2506377 0.7564473 10.5828050 ## ENSG00000205978.5 3.6754285 3.1680840 3.4384309 3.0936991 3.4784421 7.2009756 6.7039720 7.1661404 3.0173159 ## ENSG00000066629.16 4.5460077 5.1757871 4.5838613 4.8038033 5.2754496 7.4070817 7.0636727 7.8160365 4.9946451 ## SRR1554534 SRR1554536 SRR1554537 SRR1554539 SRR1554540 SRR1554541 SRR1554542 SRR1554543 ## ENSG00000004487.15 5.63589572 5.1066210 7.4629660 5.74017060 5.45966653 7.137450 5.5770880 5.32942122 ## ENSG00000204178.9 4.91044871 4.1046460 6.5148633 4.95852512 4.82244100 6.465591 4.8215851 4.82358658 ## ENSG00000162419.12 3.23065487 2.7925657 5.5614037 3.45591087 3.08681009 5.278213 3.2557949 2.98021804 ## ENSG00000162415.6 3.44118404 3.4194419 5.7579718 3.29202479 3.13183934 5.453689 3.1674390 3.45081830 ## ENSG00000085552.16 -1.40100087 -0.9476750 5.7471492 -1.69286832 -1.83348321 4.980003 -2.3244141 -1.13621555 ## ENSG00000135829.16 6.37378619 6.4717107 8.0703992 6.71348856 6.76121462 7.908621 6.4366122 6.47366370 ## ENSG00000117139.16 5.23753031 4.9170739 7.7634112 5.50773841 5.18932844 7.540866 5.1500390 5.20608906 ## ENSG00000186007.9 -1.12536643 -2.0851785 2.2919622 -1.13098943 -1.83348321 1.882354 -1.5279475 -2.29375683 ## ENSG00000143494.15 0.50081874 0.6372875 6.4686345 0.83367749 0.44152384 6.698254 0.5672097 0.85129351 ## ENSG00000234149.1 -1.74203779 -1.5997517 1.3453544 -0.95590273 -1.26788603 1.273751 -1.7143606 -1.47063459 ## ENSG00000156650.12 5.26620407 5.4178521 7.7098905 5.28604639 5.17595355 7.399726 5.0629230 5.39758406 ## ENSG00000110660.14 1.51094296 1.9327434 4.7254971 1.68960132 1.28421183 5.152897 1.9314841 2.36774723 ## ENSG00000154146.12 11.34415374 9.2282714 3.5113914 10.57549266 9.99056859 3.119644 10.3583842 10.44487137 ## ENSG00000205978.5 3.89989353 4.3174072 6.8937697 3.14603544 3.27587735 6.665568 3.1708098 3.30271966 ## ENSG00000066629.16 4.43188915 3.4446424 7.6133074 5.10402109 5.21047366 7.447585 4.8865776 4.47238979 ## SRR1554544 SRR1554546 SRR1554547 SRR1554549 SRR1554550 SRR1554551 SRR1554552 SRR1554553 SRR1554555 ## ENSG00000004487.15 5.6039939 5.6851706 5.58252649 5.7939891 5.6348392 5.62571457 5.7583151 5.8957254 5.3111881 ## ENSG00000204178.9 4.8976781 4.9920093 4.80382674 4.8848800 4.9277705 5.04839907 4.9545943 5.3119056 5.2103376 ## ENSG00000162419.12 3.7941796 3.5776137 3.21107376 3.5814159 3.3419218 3.47329697 3.7745692 3.5783628 2.3819381 ## ENSG00000162415.6 3.6835242 3.6047392 3.14207520 3.7937321 3.1547749 3.66939265 3.5876062 3.7006613 2.8555395 ## ENSG00000085552.16 0.3565132 0.6784039 -1.87492516 0.3506600 -3.5716325 0.01017559 -1.1138420 0.6816920 -3.4843105 ## ENSG00000135829.16 6.6091229 6.6381494 6.70990779 6.6321858 6.5799478 6.55151766 6.6022759 6.6378034 6.7883193 ## ENSG00000117139.16 5.3581035 5.4907658 5.26109364 5.4205833 5.1483266 5.37563551 5.5711297 5.6037779 4.5907229 ## ENSG00000186007.9 -2.3524381 -2.6823435 -0.85026310 -2.0167110 -0.5918104 -2.05210868 -1.6857484 -1.4797714 -2.7473449 ## ENSG00000143494.15 2.2914181 2.4242789 0.52448169 1.8272728 0.6071706 2.52931346 0.5886140 1.8647581 0.9080069 ## ENSG00000234149.1 -1.0986815 -1.4979189 -1.60362314 -0.9881419 -1.4561553 -1.09517741 -1.1672813 -0.9728114 -2.7473449 ## ENSG00000156650.12 5.5841999 5.7266617 5.19301911 5.4072032 5.0352867 5.70474194 5.3624807 5.4872273 4.9627727 ## ENSG00000110660.14 2.3775748 2.9588872 1.81012567 2.3700999 1.8546322 2.38790548 2.0325762 2.6342449 2.5960629 ## ENSG00000154146.12 10.1443581 9.5019402 10.50087266 10.1230833 10.6857799 9.88718964 10.9311171 9.9820042 9.2297203 ## ENSG00000205978.5 4.1986046 4.1812797 3.12662863 3.7709304 3.1364934 4.07353269 3.1090187 4.0388300 3.4660024 ## ENSG00000066629.16 4.3319060 4.3709654 5.09721287 4.4328504 5.1253350 4.25167206 5.2868822 4.9666590 4.3548933 ## SRR1554556 SRR1554557 SRR1554558 SRR1554559 SRR1554560 SRR1554561 SRR1554562 SRR1554563 SRR1554564 ## ENSG00000004487.15 5.4112402 5.5075355 5.7582381 5.6269208 5.5971272 5.7769234 5.4584050 5.1703380 5.6111724 ## ENSG00000204178.9 5.0131271 4.8425631 4.9547650 4.7914847 5.0061113 4.9248164 4.7481155 4.9736573 4.8496179 ## ENSG00000162419.12 3.4915247 2.7021050 3.4395988 3.3634601 3.1224089 3.2285051 3.3294024 3.3641442 3.5112257 ## ENSG00000162415.6 3.5145852 3.2204874 3.3742651 3.1138690 3.1902597 3.3790068 2.7473812 3.0019057 3.4610400 ## ENSG00000085552.16 -1.1065732 -3.1671383 -2.2328266 -2.3975796 -2.0732166 -1.1215635 -1.9442705 -1.0825763 -1.3085129 ## ENSG00000135829.16 6.8199759 6.3983966 6.8197415 6.5528081 6.6990494 6.3768325 6.5338072 6.4217374 6.5931863 ## ENSG00000117139.16 5.1963164 4.7780395 5.5474751 4.9887804 5.2692503 5.5095584 5.5747449 4.8761036 5.3808827 ## ENSG00000186007.9 -1.3348422 -0.8986495 -1.4591024 -0.8126171 -1.0313965 -0.7396929 -2.1047352 -1.3608775 -1.2122976 ## ENSG00000143494.15 0.3302906 1.0529102 0.3752196 0.9354037 1.5188006 0.8452696 0.4660134 1.1452296 1.1998283 ## ENSG00000234149.1 -1.4197311 -1.9827137 -0.9582042 -1.8500918 -0.8752773 -1.9180301 -1.9442705 -1.3608775 -1.6429319 ## ENSG00000156650.12 5.1900633 4.9513309 5.1784794 4.9054986 5.4020399 5.4269665 4.5899811 5.2063909 5.2644813 ## ENSG00000110660.14 1.5965707 2.1047491 1.5374910 2.2813591 2.4280352 1.5551416 2.0414216 1.9579778 2.2471340 ## ENSG00000154146.12 9.9890329 10.8809538 10.5998912 10.0435490 9.9202421 11.4212852 11.0342612 9.5932724 10.1920371 ## ENSG00000205978.5 3.3123078 3.8722793 3.1605985 3.5295146 3.3569899 3.9976921 2.7764687 3.0048865 3.8544860 ## ENSG00000066629.16 4.8102529 4.4442219 5.1942497 4.5610847 4.7913337 4.9195149 4.9556428 4.7749682 4.7441488 ## SRR1554565 SRR1554566 SRR1554568 SRR2071359 SRR2071360 SRR2071361 SRR2071362 SRR2071363 SRR2071364 ## ENSG00000004487.15 5.6493765 7.9713559 7.8845822 5.4670888 5.7774767 5.6124715 5.6127030 5.7653829 5.9287563 ## ENSG00000204178.9 4.6824677 6.5170273 6.5239255 4.8397330 4.8690042 4.9127220 5.0396130 4.9451357 5.2379472 ## ENSG00000162419.12 3.4125486 5.4231780 5.4373994 3.1981203 3.5694797 3.3217661 3.4993089 3.7751190 3.6102983 ## ENSG00000162415.6 3.4905970 5.6211712 5.7763146 3.2547705 3.7662727 3.1234103 3.6440209 3.5903565 3.5663103 ## ENSG00000085552.16 -1.3493295 6.7224479 6.5079279 -2.2549697 0.3482328 -3.6388794 0.1027569 -1.1129019 0.9033453 ## ENSG00000135829.16 6.4342860 8.3991870 8.0999882 6.5672796 6.6005127 6.5455827 6.5050058 6.5794033 6.5488977 ## ENSG00000117139.16 5.2393237 7.6681524 7.9234874 5.0399734 5.3906825 5.1148944 5.3275328 5.5496609 5.5449366 ## ENSG00000186007.9 -1.7882138 3.1547982 3.0571324 -1.8590411 -2.0847267 -0.6590573 -1.9891655 -1.5692801 -1.3096485 ## ENSG00000143494.15 0.2668276 6.0290704 6.6149205 0.4628870 1.7910534 0.6090481 2.4668105 0.6410797 1.6738634 ## ENSG00000234149.1 -1.3027869 1.9012638 1.4653888 -1.5487009 -1.0006624 -1.4512524 -1.1078100 -1.1129019 -1.3096485 ## ENSG00000156650.12 5.0511300 7.4564386 7.8283394 4.9957858 5.3861355 5.0085790 5.6746734 5.3589800 5.4633408 ## ENSG00000110660.14 2.2097811 4.5584180 5.2781954 1.5863325 2.3509019 1.8671526 2.3959021 2.0351222 2.4500884 ## ENSG00000154146.12 11.6370342 1.0170058 0.7216099 10.7556412 10.1598156 10.7068723 9.9115225 10.9823666 10.2178730 ## ENSG00000205978.5 3.4706401 7.1811818 7.0079968 3.3210007 3.7562401 3.1293049 4.0814497 3.1064308 4.0542872 ## ENSG00000066629.16 5.3013691 7.4354900 7.7328372 4.9477985 4.4179858 5.0999634 4.2192614 5.2843558 4.9296246 ## SRR2071365 SRR2071372 SRR2071373 SRR2071374 SRR2071375 ## ENSG00000004487.15 5.7493628 5.7648383 5.4495145 5.1491791 5.5991985 ## ENSG00000204178.9 5.0866337 4.8828127 4.7282085 4.9409810 4.8449503 ## ENSG00000162419.12 3.2360502 3.2021457 3.3505022 3.3259389 3.5233418 ## ENSG00000162415.6 3.6239682 3.3487956 2.7382435 2.9596421 3.4512740 ## ENSG00000085552.16 -1.2648659 -1.0981759 -1.8176793 -1.0278187 -1.2508462 ## ENSG00000135829.16 6.6165905 6.3400540 6.4934273 6.4103974 6.5500537 ## ENSG00000117139.16 5.6699252 5.4683924 5.5531976 4.8297796 5.3427429 ## ENSG00000186007.9 -1.7763663 -0.7530405 -1.9489239 -1.3777611 -1.2508462 ## ENSG00000143494.15 1.9334875 0.8113118 0.4269431 1.1445704 1.2204595 ## ENSG00000234149.1 -0.5107762 -1.9153119 -1.9489239 -1.4955976 -1.7716784 ## ENSG00000156650.12 5.9406538 5.4079038 4.5708996 5.1783316 5.2511718 ## ENSG00000110660.14 2.4812222 1.6052600 2.0639002 1.9356555 2.2631804 ## ENSG00000154146.12 9.7595398 11.4526423 11.0608798 9.6293898 10.2379829 ## ENSG00000205978.5 4.9512646 4.0266440 2.7646672 3.0118597 3.8481429 ## ENSG00000066629.16 4.9231877 4.8987746 4.9331369 4.7381240 4.7222640 ## [ reached getOption(&quot;max.print&quot;) -- omitted 35 rows ] row.names(exprs_heatmap) &lt;- filtered_id_names # default value of pdf is 4 pdf(&quot;pheatmap_con_nombres.pdf&quot;, height=14, useDingbats = FALSE) ## Y luego podemos cambiar el valor de show_rownames de FALSE a TRUE pheatmap( exprs_heatmap, # que agrupe los genes tanto en renglones como en cols que son las muestras cluster_rows = TRUE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE, annotation_col = df ) dev.off() ## pdf ## 3 5.9 Específicaciones del proyecto Con datos de algún estudio disponible vía recount3, hagan un análisis de expresión diferencial. Incluyan al menos 3 gráficas en su reporte. Su reporte debe ser público y estar listado en el Google Sheet del curso. Suena fácil, pero cada estudio tiene sus complejidades. Hay muchos paquetes que no vimos que les pueden llamar la atención, tal como ideal. En http://research.libd.org/SPEAQeasy-example/bootcamp_intro pueden encontrar varias gráficas que tal vez les quieran reproducir. En fin, ¡esto solo es el inicio! 🎉🎉🎉Our new MS is finally out! Given the timing, Santa had an early round with us 🎅💡https://t.co/a0dHFGWN7V, “ideal: an R/Bioconductor package for interactive differential expression analysis”.I promise a proper #rstats hexsticker will follow, for now enjoy the package 😉 — Federico Marini (@FedeBioinfo) December 10, 2020 "],["revisión.html", "6 Revisión", " 6 Revisión ¿Debemos explorar las relaciones entre nuestras variables? Sí y depende de eso podemos elegir el modelo * ¿Por qué usamos el paquete edgeR? Sirve para normalizar los datos Nos permite eliminar el composition bias ¿Por qué es importante el argumento sort.by en topTable()? queriamos preservar el orden original para que los renglones del objeto rse tengan el mismo orden de la tabla ¿Por qué es importante el argumento coef en topTable()? Es el coeficiente de interés lo que corresponde a model.matrix con la que creamos la matriz del diseño estadístico Usemos los datos de http://research.libd.org/SPEAQeasy-example/bootcamp_intro speaqeasy_data &lt;- file.path(tempdir(), &quot;rse_speaqeasy.RData&quot;) download.file(&quot;https://github.com/LieberInstitute/SPEAQeasy-example/blob/master/rse_speaqeasy.RData?raw=true&quot;, speaqeasy_data, mode = &quot;wb&quot;) library(&quot;SummarizedExperiment&quot;) # cargamos los datos y con verbose R nos avisa cuales son los nombres de los objetos load(speaqeasy_data, verbose = TRUE) ## Loading objects: ## rse_gene rse_gene ## class: RangedSummarizedExperiment ## dim: 60609 40 ## metadata(0): ## assays(1): counts ## rownames(60609): ENSG00000223972.5 ENSG00000227232.5 ... ENSG00000210195.2 ENSG00000210196.2 ## rowData names(10): Length gencodeID ... NumTx gencodeTx ## colnames(40): R13896_H7JKMBBXX R13903_HCTYLBBXX ... R15120_HFY2MBBXX R15134_HFFGHBBXX ## colData names(67): SAMPLE_ID FQCbasicStats ... AgeDeath BrNum ¿Cuantos genes y muestras tenemos en estos datos? genes tenemos 60606 muestras 40 ¿Cuantas variables de info en nuestras muestras? colData names (67) ¿Hay diferencias en totalAssignedGene o mitoRate entre los grupos de diagnosis (PrimaryDx)? # isee o ggplot2, scater colData(rse_gene)$names ## NULL rse_gene$totalAssignedGene == rse_gene$mitoRate ## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ## [20] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ## [39] FALSE FALSE rse_gene$PrimaryDx ## [1] Bipolar Bipolar Bipolar Bipolar Control Control Control Control Control Control Control Control Control Bipolar ## [15] Bipolar Bipolar Control Control Control Bipolar Bipolar Control Bipolar Bipolar Bipolar Bipolar Control Control ## [29] Control Bipolar Bipolar Bipolar Control Control Bipolar Bipolar Bipolar Bipolar Control Control ## Levels: Bipolar Control Other library(&quot;ggplot2&quot;) ggplot(as.data.frame(colData(rse_gene)), aes(y = mitoRate, x = PrimaryDx)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;mitoRate&quot;) + xlab(&quot;PrimaryDx&quot;) ggplot(as.data.frame(colData(rse_gene)), aes(y = totalAssignedGene, x = PrimaryDx)) + geom_boxplot() + theme_bw(base_size = 20) + ylab(&quot;totalAssignedGene&quot;) + xlab(&quot;PrimaryDx&quot;) Grafica la expresión de SNAP25 para cada grupo de diagnosis. # Es un gen marcador de neuronas, no debería haber diferencia ggplot2, scater o isee rse_gene ## class: RangedSummarizedExperiment ## dim: 60609 40 ## metadata(0): ## assays(1): counts ## rownames(60609): ENSG00000223972.5 ENSG00000227232.5 ... ENSG00000210195.2 ENSG00000210196.2 ## rowData names(10): Length gencodeID ... NumTx gencodeTx ## colnames(40): R13896_H7JKMBBXX R13903_HCTYLBBXX ... R15120_HFY2MBBXX R15134_HFFGHBBXX ## colData names(67): SAMPLE_ID FQCbasicStats ... AgeDeath BrNum rowData(rse_gene)$Symbol== &quot;SNAP25&quotreached getOption(&quot;max.print&quot;) -- omitted 59609 entries ] index_snap&lt;-match(c(&quot;SNAP25&quot;), rowData(rse_gene)$Symbol) rse_gene[index_snap] ## class: RangedSummarizedExperiment ## dim: 1 40 ## metadata(0): ## assays(1): counts ## rownames(1): ENSG00000132639.12 ## rowData names(10): Length gencodeID ... NumTx gencodeTx ## colnames(40): R13896_H7JKMBBXX R13903_HCTYLBBXX ... R15120_HFY2MBBXX R15134_HFFGHBBXX ## colData names(67): SAMPLE_ID FQCbasicStats ... AgeDeath BrNum library(&quot;iSEE&quot;) iSEE::iSEE(rse_gene[index_snap]) Shiny applications not supported in static R Markdown documents Sugiere un modelo estadistico que podríamos usar en una análisis de expresión diferencial. Verifica que si sea un modelo full rank. ¿Cúal sería el o los coeficientes de interés? Si todas las columnas son linealmente independientes a las otras. Si no es full rank no se puede usar para el analisis de expresión diferencial Utilizamos el modelo de expresión diferencial # explormodelmatrix mod &lt;- model.matrix(~ PrimaryDx + totalAssignedGene + mitoRate + numReads, data = colData(rse_gene) ) colnames(mod) ## [1] &quot;(Intercept)&quot; &quot;PrimaryDxControl&quot; &quot;PrimaryDxOther&quot; &quot;totalAssignedGene&quot; &quot;mitoRate&quot; ## [6] &quot;numReads&quot; library(&quot;edgeR&quot;) # BiocManager::install(&quot;edgeR&quot;, update = FALSE) dge &lt;- DGEList( counts = assay(rse_gene, &quot;counts&quot;), genes = rowData(rse_gene) ) dge &lt;- calcNormFactors(dge) library(&quot;limma&quot;) vGene&lt;- voom(dge,mod,plot=TRUE) ## Coefficients not estimable: PrimaryDxOther ## Warning: Partial NA coefficients for 60609 probe(s) ¿Quieres más datos? Tenemos muchos en LIBD incluyendo http://eqtl.brainseq.org/phase2/. "],["spatiallibd.html", "7 spatialLIBD 7.1 Comunidad 7.2 De ustedes", " 7 spatialLIBD 🔥off the press! 👀 our @biorxivpreprint on human brain @LieberInstitute spatial 🌌🔬transcriptomics data using Visium @10xGenomics🎉#spatialLIBD🔍https://t.co/RTW0VscUKR 👩💻https://t.co/bsg04XKONr📚https://t.co/FJDOOzrAJ6📦https://t.co/Au5jwADGhYhttps://t.co/PiWEDN9q2N pic.twitter.com/aWy0yLlR50 — 🇲🇽 Leonardo Collado-Torres (@lcolladotor) February 29, 2020 Artículo: https://www.nature.com/articles/s41593-020-00787-0 Software: http://research.libd.org/spatialLIBD/ Interfaz de shiny: http://spatial.libd.org/spatialLIBD/ Pre-print sobre SpatialExperiment https://www.biorxiv.org/content/10.1101/2021.01.27.428431v1 Are you working with spatial transcriptomics data such as Visium from @10xGenomics? Then you'll be interested in #SpatialExperiment 📦 led by @drighelli @lmwebr @CrowellHL with contributions by @PardoBree @shazanfar A Lun @stephaniehicks @drisso1893 🌟📜 https://t.co/r36qlakRJe pic.twitter.com/cWIiwLFitV — 🇲🇽 Leonardo Collado-Torres (@lcolladotor) January 29, 2021 Brenda Pardo https://twitter.com/PardoBree Today I gave my first talk at a congress in #EuroBioc2020 about our work on adapting the package #spatialLIBD to use VisiumExperiment objects. pic.twitter.com/U23yE32RWM — Brenda Pardo (@PardoBree) December 14, 2020 7.1 Comunidad https://twitter.com/miR_community https://twitter.com/R_LGBTQ https://twitter.com/conecta_R https://twitter.com/LatinR_Conf https://twitter.com/R4DScommunity https://twitter.com/RConsortium https://twitter.com/rweekly_org https://twitter.com/RLadiesGlobal https://twitter.com/RLadiesBmore https://twitter.com/search?q=%23RLadiesMX&amp;src=typed_query The blog post about the First annual meeting of #RLadiesMX is ready!! All #rladies chapters in México met for the first time!  Spread the word and join this amazing community 💜https://t.co/evY4Tc18rw Thanks @AnaBetty2304 @Averi_GG and @josschavezf1 for all your work! — RLadies Cuernavaca (@RLadiesCuerna) January 30, 2021 https://twitter.com/Bioconductor https://twitter.com/rOpenSci https://twitter.com/LIBDrstats https://twitter.com/CDSBMexico ¡Chequen el nuevo blog post de Erick @ErickCuevasF! 💯Nos describe sus experiencias en #BioC2020 y #CDSB2020Además estamos orgullxs de que Erick se unió a la Junta Directiva de la CDSB 🎉👀 https://t.co/uGpgnqXvVM#rstatsES pic.twitter.com/O2eIbk5YoZ — ComunidadBioInfo (@CDSBMexico) August 21, 2020 7.2 De ustedes @fikandata @MqElizabeth Looking for a solid and useful R 📦, we stumbled upon this beauty  https://t.co/KR3twAxqRYshoutouts to @digitalwright 👈!!@lcolladotor @Bioconductor — Axel Zagal Norman (@NormanZagal) February 24, 2021 In today's lesson of bioinformatics course of undergraduate program in genomic sciences @lcgunam we created our first personal page using @seankross' postcards R package with @lcolladotor as our instructor. #rstats https://t.co/sXUSietCZy — Angel Castillo (@angelcaztle13) February 24, 2021 Wake up Brew some @tyulmalcafe beans Attend @lcolladotor amazing class on visualizing expression data using ISEE @FedeBioinfo @KevinRUE67 @CSoneson Am I dreaming? Nah! Mug is empty. — Alfredo Varela (@fikandata) February 24, 2021 "]]
